
//  Microsoft (R) .NET Framework IL Disassembler.  Version 4.6.1055.0
//  Copyright (c) Microsoft Corporation.  All rights reserved.


// ================================= M E T A I N F O ================================================

// ===========================================================
// Metadata section: 0x424a5342, version: 1.1, extra: 0, version len: 12, version: v4.0.30319
//            flags: 0x00, streams: 5
// Stream 0: name: #~, size 4144
// Stream 1: name: #Strings, size 1892
// Stream 2: name: #US, size 2232
// Stream 3: name: #GUID, size 16
// Stream 4: name: #Blob, size 480
// Metadata header: 2.0, heaps: 0x00, rid: 0x01, valid: 0x000016090a000747, sorted: 0x000016003325fa00
// 
// Strings: 1891(0x763), Blobs: 480(0x1e0), Guids: 16(0x10), User strings: 2232(0x8b8)
// =================================================
//  0(0): Module               cRecs:    1(0x1), cbRec: 10(0xa), cbTable:    10(0xa)
//   col  0:  Generation   oCol: 0, cbCol:2, USHORT 
//   col  1:  Name         oCol: 2, cbCol:2, string 
//   col  2:  Mvid         oCol: 4, cbCol:2, GUID   
//   col  3:  EncId        oCol: 6, cbCol:2, GUID   
//   col  4:  EncBaseId    oCol: 8, cbCol:2, GUID   
// -------------------------------------------------
//    1 == 0:0000, 1:string#6a, 2:guid#1, 3:guid#0, 4:guid#0
// =================================================
//  1(0x1): TypeRef              cRecs:   10(0xa), cbRec:  6(0x6), cbTable:    60(0x3c)
//   col  0:  ResolutionScope oCol: 0, cbCol:2, ResolutionScope
//   col  1:  Name         oCol: 2, cbCol:2, string 
//   col  2:  Namespace    oCol: 4, cbCol:2, string 
// -------------------------------------------------
//    1 == 0:ResolutionScope[23000001], 1:string#11, 2:string#a
//    2 == 0:ResolutionScope[23000001], 1:string#18, 2:string#a
//    3 == 0:ResolutionScope[23000001], 1:string#24, 2:string#a
//    4 == 0:ResolutionScope[23000001], 1:string#36, 2:string#a
//    5 == 0:ResolutionScope[23000001], 1:string#46, 2:string#a
//    6 == 0:ResolutionScope[23000001], 1:string#5d, 2:string#a
//    7 == 0:ResolutionScope[00000001], 1:string#129, 2:string#0
//    8 == 0:ResolutionScope[00000001], 1:string#2e9, 2:string#0
//    9 == 0:ResolutionScope[00000001], 1:string#3af, 2:string#0
//    a == 0:ResolutionScope[00000001], 1:string#3c2, 2:string#0
// =================================================
//  2(0x2): TypeDef              cRecs:  103(0x67), cbRec: 14(0xe), cbTable:  1442(0x5a2)
//   col  0:  Flags        oCol: 0, cbCol:4, ULONG  
//   col  1:  Name         oCol: 4, cbCol:2, string 
//   col  2:  Namespace    oCol: 6, cbCol:2, string 
//   col  3:  Extends      oCol: 8, cbCol:2, TypeDefOrRef
//   col  4:  FieldList    oCol: a, cbCol:2, Field  
//   col  5:  MethodList   oCol: c, cbCol:2, Method 
// -------------------------------------------------
//    1 == 0:00000000, 1:string#1, 2:string#0, 3:TypeDefOrRef[02000000], 4:Field[4000001], 5:Method[6000001]
//    2 == 0:00000081, 1:string#89, 2:string#0, 3:TypeDefOrRef[01000001], 4:Field[4000001], 5:Method[6000001]
//    3 == 0:00000081, 1:string#8b, 2:string#0, 3:TypeDefOrRef[02000002], 4:Field[4000001], 5:Method[6000001]
//    4 == 0:00000081, 1:string#8d, 2:string#0, 3:TypeDefOrRef[02000003], 4:Field[4000001], 5:Method[6000001]
//    5 == 0:00000081, 1:string#8f, 2:string#0, 3:TypeDefOrRef[02000004], 4:Field[4000001], 5:Method[6000001]
//    6 == 0:00000081, 1:string#92, 2:string#0, 3:TypeDefOrRef[02000004], 4:Field[4000001], 5:Method[6000001]
//    7 == 0:00000081, 1:string#95, 2:string#0, 3:TypeDefOrRef[02000004], 4:Field[4000001], 5:Method[6000001]
//    8 == 0:00000081, 1:string#98, 2:string#0, 3:TypeDefOrRef[01000001], 4:Field[4000001], 5:Method[6000001]
//    9 == 0:00000081, 1:string#9e, 2:string#0, 3:TypeDefOrRef[1b000001], 4:Field[4000001], 5:Method[6000001]
//    a == 0:00000081, 1:string#a2, 2:string#0, 3:TypeDefOrRef[1b000002], 4:Field[4000001], 5:Method[6000001]
//    b == 0:00000081, 1:string#a6, 2:string#0, 3:TypeDefOrRef[1b000003], 4:Field[4000001], 5:Method[6000001]
//    c == 0:00000081, 1:string#ab, 2:string#0, 3:TypeDefOrRef[1b000003], 4:Field[4000001], 5:Method[6000001]
//    d == 0:00000081, 1:string#b0, 2:string#0, 3:TypeDefOrRef[1b000003], 4:Field[4000001], 5:Method[6000001]
//    e == 0:00000081, 1:string#b5, 2:string#0, 3:TypeDefOrRef[01000001], 4:Field[4000001], 5:Method[6000001]
//    f == 0:00000081, 1:string#b8, 2:string#0, 3:TypeDefOrRef[0200000e], 4:Field[4000001], 5:Method[6000001]
//   10 == 0:00000081, 1:string#bd, 2:string#0, 3:TypeDefOrRef[1b000004], 4:Field[4000001], 5:Method[6000001]
//   11 == 0:00000001, 1:string#c0, 2:string#0, 3:TypeDefOrRef[01000001], 4:Field[4000001], 5:Method[6000001]
//   12 == 0:00000001, 1:string#c3, 2:string#0, 3:TypeDefOrRef[01000001], 4:Field[4000001], 5:Method[6000001]
//   13 == 0:00000002, 1:string#c5, 2:string#0, 3:TypeDefOrRef[02000011], 4:Field[4000001], 5:Method[6000001]
//   14 == 0:00000001, 1:string#c8, 2:string#0, 3:TypeDefOrRef[02000013], 4:Field[4000001], 5:Method[6000001]
//   15 == 0:000000a1, 1:string#cb, 2:string#0, 3:TypeDefOrRef[02000000], 4:Field[4000001], 5:Method[6000001]
//   16 == 0:000000a1, 1:string#ce, 2:string#0, 3:TypeDefOrRef[02000000], 4:Field[4000001], 5:Method[6000001]
//   17 == 0:000000a1, 1:string#d1, 2:string#0, 3:TypeDefOrRef[02000000], 4:Field[4000001], 5:Method[6000001]
//   18 == 0:000000a1, 1:string#d4, 2:string#0, 3:TypeDefOrRef[02000000], 4:Field[4000001], 5:Method[6000001]
//   19 == 0:000000a1, 1:string#d9, 2:string#0, 3:TypeDefOrRef[02000000], 4:Field[4000001], 5:Method[6000001]
//   1a == 0:000000a1, 1:string#de, 2:string#0, 3:TypeDefOrRef[02000000], 4:Field[4000001], 5:Method[6000001]
//   1b == 0:000000a1, 1:string#e3, 2:string#0, 3:TypeDefOrRef[02000000], 4:Field[4000001], 5:Method[6000001]
//   1c == 0:000000a1, 1:string#ea, 2:string#0, 3:TypeDefOrRef[02000000], 4:Field[4000001], 5:Method[6000001]
//   1d == 0:000000a1, 1:string#f1, 2:string#0, 3:TypeDefOrRef[02000000], 4:Field[4000001], 5:Method[6000001]
//   1e == 0:00000101, 1:string#f8, 2:string#0, 3:TypeDefOrRef[01000002], 4:Field[4000001], 5:Method[6000001]
//   1f == 0:00000081, 1:string#101, 2:string#0, 3:TypeDefOrRef[01000001], 4:Field[4000001], 5:Method[6000001]
//   20 == 0:00000081, 1:string#112, 2:string#0, 3:TypeDefOrRef[0200001f], 4:Field[4000001], 5:Method[6000002]
//   21 == 0:00000081, 1:string#129, 2:string#0, 3:TypeDefOrRef[0200001f], 4:Field[4000001], 5:Method[6000003]
//   22 == 0:00000081, 1:string#141, 2:string#0, 3:TypeDefOrRef[02000021], 4:Field[4000001], 5:Method[6000004]
//   23 == 0:00000081, 1:string#15d, 2:string#0, 3:TypeDefOrRef[01000001], 4:Field[4000001], 5:Method[6000005]
//   24 == 0:00000081, 1:string#176, 2:string#0, 3:TypeDefOrRef[02000023], 4:Field[4000001], 5:Method[6000006]
//   25 == 0:00000081, 1:string#195, 2:string#0, 3:TypeDefOrRef[02000023], 4:Field[4000001], 5:Method[6000007]
//   26 == 0:00000081, 1:string#1b5, 2:string#0, 3:TypeDefOrRef[02000024], 4:Field[4000001], 5:Method[6000008]
//   27 == 0:00000081, 1:string#1db, 2:string#0, 3:TypeDefOrRef[02000025], 4:Field[4000001], 5:Method[6000009]
//   28 == 0:000000a1, 1:string#1ff, 2:string#0, 3:TypeDefOrRef[02000000], 4:Field[4000001], 5:Method[600000a]
//   29 == 0:00000081, 1:string#211, 2:string#0, 3:TypeDefOrRef[01000001], 4:Field[4000001], 5:Method[600000b]
//   2a == 0:00000081, 1:string#229, 2:string#0, 3:TypeDefOrRef[01000001], 4:Field[4000001], 5:Method[600000c]
//   2b == 0:000000a1, 1:string#242, 2:string#0, 3:TypeDefOrRef[02000000], 4:Field[4000001], 5:Method[600000d]
//   2c == 0:00000081, 1:string#25c, 2:string#0, 3:TypeDefOrRef[01000001], 4:Field[4000001], 5:Method[600000e]
//   2d == 0:00000081, 1:string#27c, 2:string#0, 3:TypeDefOrRef[01000001], 4:Field[4000001], 5:Method[600000f]
//   2e == 0:00000081, 1:string#29d, 2:string#0, 3:TypeDefOrRef[0200002c], 4:Field[4000001], 5:Method[6000010]
//   2f == 0:00000081, 1:string#2c4, 2:string#0, 3:TypeDefOrRef[0200002d], 4:Field[4000001], 5:Method[6000011]
//   30 == 0:00000081, 1:string#2e9, 2:string#0, 3:TypeDefOrRef[01000001], 4:Field[4000001], 5:Method[6000012]
//   31 == 0:00000081, 1:string#2f2, 2:string#0, 3:TypeDefOrRef[02000030], 4:Field[4000001], 5:Method[6000015]
//   32 == 0:00000081, 1:string#300, 2:string#0, 3:TypeDefOrRef[02000030], 4:Field[4000001], 5:Method[6000018]
//   33 == 0:00000081, 1:string#314, 2:string#0, 3:TypeDefOrRef[02000030], 4:Field[4000001], 5:Method[6000019]
//   34 == 0:00000081, 1:string#327, 2:string#0, 3:TypeDefOrRef[01000001], 4:Field[4000001], 5:Method[600001a]
//   35 == 0:00000081, 1:string#331, 2:string#0, 3:TypeDefOrRef[02000034], 4:Field[4000001], 5:Method[600001b]
//   36 == 0:00000081, 1:string#341, 2:string#0, 3:TypeDefOrRef[02000034], 4:Field[4000001], 5:Method[600001c]
//   37 == 0:00000081, 1:string#350, 2:string#0, 3:TypeDefOrRef[02000034], 4:Field[4000001], 5:Method[600001d]
//   38 == 0:00000081, 1:string#35f, 2:string#0, 3:TypeDefOrRef[02000034], 4:Field[4000001], 5:Method[600001e]
//   39 == 0:00000081, 1:string#374, 2:string#0, 3:TypeDefOrRef[02000034], 4:Field[4000001], 5:Method[600001f]
//   3a == 0:00000081, 1:string#385, 2:string#0, 3:TypeDefOrRef[02000034], 4:Field[4000001], 5:Method[6000020]
//   3b == 0:00000081, 1:string#39d, 2:string#0, 3:TypeDefOrRef[01000001], 4:Field[4000001], 5:Method[6000021]
//   3c == 0:00000081, 1:string#3af, 2:string#0, 3:TypeDefOrRef[0200003b], 4:Field[4000001], 5:Method[6000022]
//   3d == 0:00000081, 1:string#3c2, 2:string#0, 3:TypeDefOrRef[0200003b], 4:Field[4000001], 5:Method[6000023]
//   3e == 0:00000081, 1:string#3d5, 2:string#0, 3:TypeDefOrRef[0200003c], 4:Field[4000001], 5:Method[6000024]
//   3f == 0:00000081, 1:string#3e9, 2:string#0, 3:TypeDefOrRef[0200003d], 4:Field[4000001], 5:Method[6000025]
//   40 == 0:00000081, 1:string#3fd, 2:string#0, 3:TypeDefOrRef[01000001], 4:Field[4000001], 5:Method[6000026]
//   41 == 0:00000081, 1:string#410, 2:string#0, 3:TypeDefOrRef[02000040], 4:Field[4000001], 5:Method[6000027]
//   42 == 0:00000081, 1:string#423, 2:string#0, 3:TypeDefOrRef[02000041], 4:Field[4000001], 5:Method[6000028]
//   43 == 0:00000081, 1:string#436, 2:string#0, 3:TypeDefOrRef[01000001], 4:Field[4000001], 5:Method[6000029]
//   44 == 0:00000081, 1:string#443, 2:string#0, 3:TypeDefOrRef[1b00000b], 4:Field[4000001], 5:Method[600002a]
//   45 == 0:00000081, 1:string#451, 2:string#0, 3:TypeDefOrRef[1b00000b], 4:Field[4000001], 5:Method[600002b]
//   46 == 0:00000081, 1:string#45f, 2:string#0, 3:TypeDefOrRef[1b00000c], 4:Field[4000001], 5:Method[600002c]
//   47 == 0:00000081, 1:string#46e, 2:string#0, 3:TypeDefOrRef[1b00000d], 4:Field[4000001], 5:Method[600002d]
//   48 == 0:00000081, 1:string#47d, 2:string#0, 3:TypeDefOrRef[01000001], 4:Field[4000001], 5:Method[600002e]
//   49 == 0:00000081, 1:string#48d, 2:string#0, 3:TypeDefOrRef[02000048], 4:Field[4000001], 5:Method[600002f]
//   4a == 0:00000081, 1:string#49d, 2:string#0, 3:TypeDefOrRef[02000049], 4:Field[4000001], 5:Method[6000030]
//   4b == 0:00000081, 1:string#4ad, 2:string#0, 3:TypeDefOrRef[01000001], 4:Field[4000001], 5:Method[6000031]
//   4c == 0:00000081, 1:string#4b9, 2:string#0, 3:TypeDefOrRef[0200004b], 4:Field[4000001], 5:Method[6000032]
//   4d == 0:00000081, 1:string#4c6, 2:string#0, 3:TypeDefOrRef[0200004b], 4:Field[4000001], 5:Method[6000033]
//   4e == 0:00000081, 1:string#4d3, 2:string#0, 3:TypeDefOrRef[0200004c], 4:Field[4000001], 5:Method[6000034]
//   4f == 0:00000081, 1:string#4e1, 2:string#0, 3:TypeDefOrRef[0200004d], 4:Field[4000001], 5:Method[6000035]
//   50 == 0:00000081, 1:string#4ef, 2:string#0, 3:TypeDefOrRef[0200004b], 4:Field[4000001], 5:Method[6000036]
//   51 == 0:00000081, 1:string#501, 2:string#0, 3:TypeDefOrRef[01000001], 4:Field[4000001], 5:Method[6000037]
//   52 == 0:00000081, 1:string#50f, 2:string#0, 3:TypeDefOrRef[1b000013], 4:Field[4000001], 5:Method[6000038]
//   53 == 0:00000081, 1:string#51e, 2:string#0, 3:TypeDefOrRef[1b000013], 4:Field[4000001], 5:Method[6000039]
//   54 == 0:00000081, 1:string#52d, 2:string#0, 3:TypeDefOrRef[1b000014], 4:Field[4000001], 5:Method[600003a]
//   55 == 0:00000081, 1:string#53d, 2:string#0, 3:TypeDefOrRef[1b000015], 4:Field[4000001], 5:Method[600003b]
//   56 == 0:00000081, 1:string#54d, 2:string#0, 3:TypeDefOrRef[01000001], 4:Field[4000001], 5:Method[600003c]
//   57 == 0:00000081, 1:string#55e, 2:string#0, 3:TypeDefOrRef[02000056], 4:Field[4000001], 5:Method[600003d]
//   58 == 0:00000081, 1:string#56f, 2:string#0, 3:TypeDefOrRef[02000056], 4:Field[4000001], 5:Method[600003e]
//   59 == 0:00000081, 1:string#580, 2:string#0, 3:TypeDefOrRef[01000001], 4:Field[4000001], 5:Method[600003f]
//   5a == 0:00000081, 1:string#58e, 2:string#0, 3:TypeDefOrRef[02000059], 4:Field[4000001], 5:Method[6000045]
//   5b == 0:00000081, 1:string#5a2, 2:string#0, 3:TypeDefOrRef[02000059], 4:Field[4000001], 5:Method[6000046]
//   5c == 0:00000081, 1:string#5b5, 2:string#0, 3:TypeDefOrRef[02000059], 4:Field[4000001], 5:Method[6000047]
//   5d == 0:00000081, 1:string#5c8, 2:string#0, 3:TypeDefOrRef[02000059], 4:Field[4000001], 5:Method[6000048]
//   5e == 0:00000081, 1:string#5e1, 2:string#0, 3:TypeDefOrRef[02000059], 4:Field[4000001], 5:Method[6000049]
//   5f == 0:00000081, 1:string#5f6, 2:string#0, 3:TypeDefOrRef[02000059], 4:Field[4000001], 5:Method[600004a]
//   60 == 0:00000081, 1:string#612, 2:string#0, 3:TypeDefOrRef[01000001], 4:Field[4000001], 5:Method[600004b]
//   61 == 0:00000081, 1:string#628, 2:string#0, 3:TypeDefOrRef[02000060], 4:Field[4000001], 5:Method[600004c]
//   62 == 0:00000081, 1:string#63f, 2:string#0, 3:TypeDefOrRef[02000060], 4:Field[4000001], 5:Method[600004d]
//   63 == 0:00000081, 1:string#656, 2:string#0, 3:TypeDefOrRef[01000001], 4:Field[4000001], 5:Method[600004e]
//   64 == 0:00000081, 1:string#666, 2:string#0, 3:TypeDefOrRef[02000063], 4:Field[4000001], 5:Method[6000050]
//   65 == 0:00000081, 1:string#677, 2:string#0, 3:TypeDefOrRef[02000063], 4:Field[4000001], 5:Method[6000051]
//   66 == 0:00000081, 1:string#688, 2:string#0, 3:TypeDefOrRef[02000063], 4:Field[4000001], 5:Method[6000052]
//   67 == 0:00100180, 1:string#69e, 2:string#0, 3:TypeDefOrRef[01000001], 4:Field[4000001], 5:Method[6000053]
// =================================================
//  3(0x3): FieldPtr             cRecs:    0(0), cbRec:  2(0x2), cbTable:     0(0)
//   col  0:  Field        oCol: 0, cbCol:2, Field  
// =================================================
//  4(0x4): Field                cRecs:    0(0), cbRec:  6(0x6), cbTable:     0(0)
//   col  0:  Flags        oCol: 0, cbCol:2, USHORT 
//   col  1:  Name         oCol: 2, cbCol:2, string 
//   col  2:  Signature    oCol: 4, cbCol:2, blob   
// =================================================
//  5(0x5): MethodPtr            cRecs:    0(0), cbRec:  2(0x2), cbTable:     0(0)
//   col  0:  Method       oCol: 0, cbCol:2, Method 
// =================================================
//  6(0x6): Method               cRecs:   92(0x5c), cbRec: 14(0xe), cbTable:  1288(0x508)
//   col  0:  RVA          oCol: 0, cbCol:4, ULONG  
//   col  1:  ImplFlags    oCol: 4, cbCol:2, USHORT 
//   col  2:  Flags        oCol: 6, cbCol:2, USHORT 
//   col  3:  Name         oCol: 8, cbCol:2, string 
//   col  4:  Signature    oCol: a, cbCol:2, blob   
//   col  5:  ParamList    oCol: c, cbCol:2, Param  
// -------------------------------------------------
//    1 == 0:00000000, 1:0000, 2:0446, 3:string#6a6, 4:blob#128, 5:Param[8000001]
//    2 == 0:00000000, 1:0000, 2:0446, 3:string#6ad, 4:blob#128, 5:Param[8000002]
//    3 == 0:00000000, 1:0000, 2:0446, 3:string#6ad, 4:blob#128, 5:Param[8000003]
//    4 == 0:00000000, 1:0000, 2:0446, 3:string#6b0, 4:blob#128, 5:Param[8000004]
//    5 == 0:00000000, 1:0000, 2:0446, 3:string#22, 4:blob#128, 5:Param[8000005]
//    6 == 0:00000000, 1:0000, 2:0446, 3:string#22, 4:blob#128, 5:Param[8000006]
//    7 == 0:00000000, 1:0000, 2:0446, 3:string#22, 4:blob#128, 5:Param[8000007]
//    8 == 0:00000000, 1:0000, 2:0446, 3:string#22, 4:blob#128, 5:Param[8000008]
//    9 == 0:00000000, 1:0000, 2:0446, 3:string#22, 4:blob#128, 5:Param[8000009]
//    a == 0:00000000, 1:0000, 2:0546, 3:string#6a6, 4:blob#128, 5:Param[800000a]
//    b == 0:00000000, 1:0000, 2:0546, 3:string#6ad, 4:blob#128, 5:Param[800000b]
//    c == 0:00000000, 1:0000, 2:0546, 3:string#6ad, 4:blob#128, 5:Param[800000c]
//    d == 0:00000000, 1:0000, 2:0546, 3:string#22, 4:blob#128, 5:Param[800000d]
//    e == 0:00000000, 1:0000, 2:0546, 3:string#22, 4:blob#128, 5:Param[800000e]
//    f == 0:00000000, 1:0000, 2:0546, 3:string#22, 4:blob#128, 5:Param[800000f]
//   10 == 0:00000000, 1:0000, 2:0446, 3:string#22, 4:blob#128, 5:Param[8000010]
//   11 == 0:00000000, 1:0000, 2:0446, 3:string#22, 4:blob#128, 5:Param[8000011]
//   12 == 0:00000000, 1:0000, 2:0446, 3:string#22, 4:blob#10c, 5:Param[8000012]
//   13 == 0:00000000, 1:0000, 2:0446, 3:string#22, 4:blob#3d, 5:Param[8000013]
//   14 == 0:00000000, 1:0000, 2:0446, 3:string#22, 4:blob#43, 5:Param[8000014]
//   15 == 0:00000000, 1:0000, 2:0446, 3:string#6b3, 4:blob#130, 5:Param[8000015]
//   16 == 0:00000000, 1:0000, 2:0446, 3:string#6b8, 4:blob#130, 5:Param[8000016]
//   17 == 0:00000000, 1:0000, 2:0446, 3:string#6bd, 4:blob#10c, 5:Param[8000017]
//   18 == 0:00000000, 1:0000, 2:0446, 3:string#22, 4:blob#49, 5:Param[8000018]
//   19 == 0:00000000, 1:0000, 2:0446, 3:string#6b8, 4:blob#10c, 5:Param[8000019]
//   1a == 0:00000000, 1:0000, 2:0446, 3:string#22, 4:blob#53, 5:Param[800001a]
//   1b == 0:00000000, 1:0000, 2:0446, 3:string#22, 4:blob#136, 5:Param[800001a]
//   1c == 0:00000000, 1:0000, 2:0446, 3:string#22, 4:blob#13a, 5:Param[800001a]
//   1d == 0:00000000, 1:0000, 2:0446, 3:string#22, 4:blob#140, 5:Param[800001a]
//   1e == 0:00000000, 1:0000, 2:0446, 3:string#22, 4:blob#149, 5:Param[800001a]
//   1f == 0:00000000, 1:0000, 2:0446, 3:string#22, 4:blob#152, 5:Param[800001a]
//   20 == 0:00000000, 1:0000, 2:0446, 3:string#22, 4:blob#157, 5:Param[800001a]
//   21 == 0:00000000, 1:0000, 2:0446, 3:string#22, 4:blob#15d, 5:Param[800001a]
//   22 == 0:00000000, 1:0000, 2:0446, 3:string#22, 4:blob#162, 5:Param[800001a]
//   23 == 0:00000000, 1:0000, 2:0446, 3:string#22, 4:blob#167, 5:Param[800001a]
//   24 == 0:00000000, 1:0000, 2:0446, 3:string#22, 4:blob#167, 5:Param[800001a]
//   25 == 0:00000000, 1:0000, 2:0446, 3:string#22, 4:blob#162, 5:Param[800001a]
//   26 == 0:00000000, 1:0000, 2:0446, 3:string#22, 4:blob#16c, 5:Param[800001a]
//   27 == 0:00000000, 1:0000, 2:0446, 3:string#22, 4:blob#171, 5:Param[800001a]
//   28 == 0:00000000, 1:0000, 2:0446, 3:string#22, 4:blob#176, 5:Param[800001a]
//   29 == 0:00000000, 1:0000, 2:0446, 3:string#22, 4:blob#5f, 5:Param[800001a]
//   2a == 0:00000000, 1:0000, 2:0446, 3:string#22, 4:blob#17b, 5:Param[800001a]
//   2b == 0:00000000, 1:0000, 2:0446, 3:string#22, 4:blob#184, 5:Param[800001a]
//   2c == 0:00000000, 1:0000, 2:0446, 3:string#22, 4:blob#184, 5:Param[800001a]
//   2d == 0:00000000, 1:0000, 2:0446, 3:string#22, 4:blob#17b, 5:Param[800001a]
//   2e == 0:00000000, 1:0000, 2:0446, 3:string#22, 4:blob#7c, 5:Param[800001a]
//   2f == 0:00000000, 1:0000, 2:0446, 3:string#22, 4:blob#85, 5:Param[800001a]
//   30 == 0:00000000, 1:0000, 2:0446, 3:string#22, 4:blob#18d, 5:Param[800001a]
//   31 == 0:00000000, 1:0000, 2:0446, 3:string#22, 4:blob#92, 5:Param[800001a]
//   32 == 0:00000000, 1:0000, 2:0446, 3:string#22, 4:blob#9b, 5:Param[800001a]
//   33 == 0:00000000, 1:0000, 2:0446, 3:string#22, 4:blob#a4, 5:Param[800001a]
//   34 == 0:00000000, 1:0000, 2:0446, 3:string#22, 4:blob#a4, 5:Param[800001a]
//   35 == 0:00000000, 1:0000, 2:0446, 3:string#22, 4:blob#9b, 5:Param[800001a]
//   36 == 0:00000000, 1:0000, 2:0446, 3:string#22, 4:blob#192, 5:Param[800001a]
//   37 == 0:00000000, 1:0000, 2:0446, 3:string#22, 4:blob#b1, 5:Param[800001a]
//   38 == 0:00000000, 1:0000, 2:0446, 3:string#22, 4:blob#197, 5:Param[800001a]
//   39 == 0:00000000, 1:0000, 2:0446, 3:string#22, 4:blob#1a0, 5:Param[800001a]
//   3a == 0:00000000, 1:0000, 2:0446, 3:string#22, 4:blob#1a0, 5:Param[800001a]
//   3b == 0:00000000, 1:0000, 2:0446, 3:string#22, 4:blob#197, 5:Param[800001a]
//   3c == 0:00000000, 1:0000, 2:0446, 3:string#22, 4:blob#ce, 5:Param[800001a]
//   3d == 0:00000000, 1:0000, 2:0446, 3:string#22, 4:blob#1a9, 5:Param[800001a]
//   3e == 0:00000000, 1:0000, 2:0446, 3:string#22, 4:blob#1b2, 5:Param[800001a]
//   3f == 0:00000000, 1:0000, 2:0446, 3:string#22, 4:blob#db, 5:Param[800001a]
//   40 == 0:00000000, 1:0000, 2:0446, 3:string#22, 4:blob#e0, 5:Param[800001b]
//   41 == 0:00000000, 1:0000, 2:0446, 3:string#22, 4:blob#e7, 5:Param[800001c]
//   42 == 0:00000000, 1:0000, 2:0446, 3:string#22, 4:blob#f1, 5:Param[800001d]
//   43 == 0:00000000, 1:0000, 2:0446, 3:string#22, 4:blob#fb, 5:Param[800001e]
//   44 == 0:00000000, 1:0000, 2:0446, 3:string#22, 4:blob#101, 5:Param[800001f]
//   45 == 0:00000000, 1:0000, 2:0446, 3:string#22, 4:blob#1bb, 5:Param[8000020]
//   46 == 0:00000000, 1:0000, 2:0446, 3:string#22, 4:blob#1bb, 5:Param[8000021]
//   47 == 0:00000000, 1:0000, 2:0446, 3:string#22, 4:blob#1bb, 5:Param[8000022]
//   48 == 0:00000000, 1:0000, 2:0446, 3:string#22, 4:blob#e7, 5:Param[8000023]
//   49 == 0:00000000, 1:0000, 2:0446, 3:string#22, 4:blob#1bb, 5:Param[8000024]
//   4a == 0:00000000, 1:0000, 2:0446, 3:string#22, 4:blob#1bb, 5:Param[8000025]
//   4b == 0:00000000, 1:0000, 2:0446, 3:string#22, 4:blob#10c, 5:Param[8000026]
//   4c == 0:00000000, 1:0000, 2:0446, 3:string#22, 4:blob#130, 5:Param[8000027]
//   4d == 0:00000000, 1:0000, 2:0446, 3:string#22, 4:blob#1c0, 5:Param[8000028]
//   4e == 0:00000000, 1:0000, 2:0446, 3:string#22, 4:blob#11c, 5:Param[8000029]
//   4f == 0:00000000, 1:0000, 2:0446, 3:string#22, 4:blob#116, 5:Param[800002a]
//   50 == 0:00000000, 1:0000, 2:0446, 3:string#22, 4:blob#1c6, 5:Param[800002b]
//   51 == 0:00000000, 1:0000, 2:0446, 3:string#22, 4:blob#11c, 5:Param[800002c]
//   52 == 0:00000000, 1:0000, 2:0446, 3:string#22, 4:blob#1cc, 5:Param[800002d]
//   53 == 0:00002050, 1:0000, 2:0011, 3:string#6c5, 4:blob#1d2, 5:Param[800002e]
//   54 == 0:00002086, 1:0000, 2:0011, 3:string#2e9, 4:blob#1d6, 5:Param[800002e]
//   55 == 0:000020a8, 1:0000, 2:0011, 3:string#6c9, 4:blob#1d6, 5:Param[800002e]
//   56 == 0:0000211c, 1:0000, 2:0011, 3:string#327, 4:blob#1d6, 5:Param[800002e]
//   57 == 0:000021c0, 1:0000, 2:0011, 3:string#580, 4:blob#1d6, 5:Param[800002e]
//   58 == 0:0000223c, 1:0000, 2:0011, 3:string#6da, 4:blob#1d6, 5:Param[800002e]
//   59 == 0:000022cb, 1:0000, 2:0011, 3:string#6f5, 4:blob#1d6, 5:Param[800002e]
//   5a == 0:000022d0, 1:0000, 2:0011, 3:string#70a, 4:blob#1da, 5:Param[800002e]
//   5b == 0:00002300, 1:0000, 2:0011, 3:string#72b, 4:blob#1da, 5:Param[800002f]
//   5c == 0:00002330, 1:0000, 2:0011, 3:string#74c, 4:blob#1da, 5:Param[8000030]
// =================================================
//  7(0x7): ParamPtr             cRecs:    0(0), cbRec:  2(0x2), cbTable:     0(0)
//   col  0:  Param        oCol: 0, cbCol:2, Param  
// =================================================
//  8(0x8): Param                cRecs:   48(0x30), cbRec:  6(0x6), cbTable:   288(0x120)
//   col  0:  Flags        oCol: 0, cbCol:2, USHORT 
//   col  1:  Sequence     oCol: 2, cbCol:2, USHORT 
//   col  2:  Name         oCol: 4, cbCol:2, string 
// -------------------------------------------------
//    1 == 0:0000, 1:0001, 2:string#6a9
//    2 == 0:0000, 1:0001, 2:string#6a9
//    3 == 0:0000, 1:0001, 2:string#6a9
//    4 == 0:0000, 1:0001, 2:string#6a9
//    5 == 0:0000, 1:0001, 2:string#6a9
//    6 == 0:0000, 1:0001, 2:string#6a9
//    7 == 0:0000, 1:0001, 2:string#6a9
//    8 == 0:0000, 1:0001, 2:string#6a9
//    9 == 0:0000, 1:0001, 2:string#6a9
//    a == 0:0000, 1:0001, 2:string#6a9
//    b == 0:0000, 1:0001, 2:string#6a9
//    c == 0:0000, 1:0001, 2:string#6a9
//    d == 0:0000, 1:0001, 2:string#6a9
//    e == 0:0000, 1:0001, 2:string#6a9
//    f == 0:0000, 1:0001, 2:string#6a9
//   10 == 0:0000, 1:0001, 2:string#6a9
//   11 == 0:0000, 1:0001, 2:string#6a9
//   12 == 0:0000, 1:0001, 2:string#6a9
//   13 == 0:0000, 1:0001, 2:string#6a9
//   14 == 0:0000, 1:0001, 2:string#6a9
//   15 == 0:0000, 1:0001, 2:string#6a9
//   16 == 0:0000, 1:0001, 2:string#6a9
//   17 == 0:0000, 1:0001, 2:string#6a9
//   18 == 0:0000, 1:0001, 2:string#6a9
//   19 == 0:0000, 1:0001, 2:string#6a9
//   1a == 0:0000, 1:0001, 2:string#6a9
//   1b == 0:0000, 1:0001, 2:string#6a9
//   1c == 0:0000, 1:0001, 2:string#6a9
//   1d == 0:0000, 1:0001, 2:string#6a9
//   1e == 0:0000, 1:0001, 2:string#6a9
//   1f == 0:0000, 1:0001, 2:string#6a9
//   20 == 0:0000, 1:0001, 2:string#6a9
//   21 == 0:0000, 1:0001, 2:string#6a9
//   22 == 0:0000, 1:0001, 2:string#6a9
//   23 == 0:0000, 1:0001, 2:string#6a9
//   24 == 0:0000, 1:0001, 2:string#6a9
//   25 == 0:0000, 1:0001, 2:string#6a9
//   26 == 0:0000, 1:0001, 2:string#6a9
//   27 == 0:0000, 1:0001, 2:string#6a9
//   28 == 0:0000, 1:0001, 2:string#6a9
//   29 == 0:0000, 1:0001, 2:string#6c1
//   2a == 0:0000, 1:0001, 2:string#6c1
//   2b == 0:0000, 1:0001, 2:string#6c1
//   2c == 0:0000, 1:0001, 2:string#6c1
//   2d == 0:0000, 1:0001, 2:string#6c1
//   2e == 0:0000, 1:0001, 2:string#726
//   2f == 0:0000, 1:0001, 2:string#726
//   30 == 0:0000, 1:0001, 2:string#726
// =================================================
//  9(0x9): InterfaceImpl        cRecs:   11(0xb), cbRec:  4(0x4), cbTable:    44(0x2c)
//   col  0:* Class        oCol: 0, cbCol:2, TypeDef
//   col  1:  Interface    oCol: 2, cbCol:2, TypeDefOrRef
// -------------------------------------------------
//    1 == 0:TypeDef[2000016], 1:TypeDefOrRef[02000015]
//    2 == 0:TypeDef[2000017], 1:TypeDefOrRef[02000016]
//    3 == 0:TypeDef[2000019], 1:TypeDefOrRef[1b000005]
//    4 == 0:TypeDef[200001a], 1:TypeDefOrRef[1b000006]
//    5 == 0:TypeDef[200001c], 1:TypeDefOrRef[1b000007]
//    6 == 0:TypeDef[200001d], 1:TypeDefOrRef[1b000008]
//    7 == 0:TypeDef[200001e], 1:TypeDefOrRef[02000015]
//    8 == 0:TypeDef[2000029], 1:TypeDefOrRef[02000028]
//    9 == 0:TypeDef[200002a], 1:TypeDefOrRef[02000028]
//    a == 0:TypeDef[200002c], 1:TypeDefOrRef[0200002b]
//    b == 0:TypeDef[200002d], 1:TypeDefOrRef[0200002b]
// =================================================
// 10(0xa): MemberRef            cRecs:   27(0x1b), cbRec:  6(0x6), cbTable:   162(0xa2)
//   col  0:  Class        oCol: 0, cbCol:2, MemberRefParent
//   col  1:  Name         oCol: 2, cbCol:2, string 
//   col  2:  Signature    oCol: 4, cbCol:2, blob   
// -------------------------------------------------
//    1 == 0:MemberRefParent[1b000009], 1:string#22, 2:blob#3d
//    2 == 0:MemberRefParent[1b000009], 1:string#22, 2:blob#43
//    3 == 0:MemberRefParent[1b000009], 1:string#22, 2:blob#49
//    4 == 0:MemberRefParent[1b00000a], 1:string#22, 2:blob#53
//    5 == 0:MemberRefParent[1b00000b], 1:string#22, 2:blob#5f
//    6 == 0:MemberRefParent[1b00000e], 1:string#22, 2:blob#7c
//    7 == 0:MemberRefParent[1b00000f], 1:string#22, 2:blob#85
//    8 == 0:MemberRefParent[1b000010], 1:string#22, 2:blob#92
//    9 == 0:MemberRefParent[1b000011], 1:string#22, 2:blob#9b
//    a == 0:MemberRefParent[1b000012], 1:string#22, 2:blob#a4
//    b == 0:MemberRefParent[1b000013], 1:string#22, 2:blob#b1
//    c == 0:MemberRefParent[1b000016], 1:string#22, 2:blob#ce
//    d == 0:MemberRefParent[1b000017], 1:string#22, 2:blob#db
//    e == 0:MemberRefParent[1b000017], 1:string#22, 2:blob#e0
//    f == 0:MemberRefParent[1b000017], 1:string#22, 2:blob#e7
//   10 == 0:MemberRefParent[1b000017], 1:string#22, 2:blob#f1
//   11 == 0:MemberRefParent[1b000017], 1:string#22, 2:blob#fb
//   12 == 0:MemberRefParent[1b000017], 1:string#22, 2:blob#101
//   13 == 0:MemberRefParent[1b000018], 1:string#22, 2:blob#10c
//   14 == 0:MemberRefParent[1b000019], 1:string#22, 2:blob#116
//   15 == 0:MemberRefParent[1b000019], 1:string#22, 2:blob#11c
//   16 == 0:MemberRefParent[01000004], 1:string#40, 2:blob#db
//   17 == 0:MemberRefParent[01000006], 1:string#62, 2:blob#122
//   18 == 0:MemberRefParent[01000007], 1:string#6a6, 2:blob#128
//   19 == 0:MemberRefParent[01000008], 1:string#22, 2:blob#49
//   1a == 0:MemberRefParent[01000009], 1:string#22, 2:blob#15d
//   1b == 0:MemberRefParent[0100000a], 1:string#22, 2:blob#15d
// =================================================
// 11(0xb): Constant             cRecs:    0(0), cbRec:  6(0x6), cbTable:     0(0)
//   col  0:  Type         oCol: 0, cbCol:1, BYTE   
//   col  1:* Parent       oCol: 2, cbCol:2, HasConstant
//   col  2:  Value        oCol: 4, cbCol:2, blob   
// =================================================
// 12(0xc): CustomAttribute      cRecs:    0(0), cbRec:  6(0x6), cbTable:     0(0)
//   col  0:* Parent       oCol: 0, cbCol:2, HasCustomAttribute
//   col  1:  Type         oCol: 2, cbCol:2, CustomAttributeType
//   col  2:  Value        oCol: 4, cbCol:2, blob   
// =================================================
// 13(0xd): FieldMarshal         cRecs:    0(0), cbRec:  4(0x4), cbTable:     0(0)
//   col  0:* Parent       oCol: 0, cbCol:2, HasFieldMarshal
//   col  1:  NativeType   oCol: 2, cbCol:2, blob   
// =================================================
// 14(0xe): DeclSecurity         cRecs:    0(0), cbRec:  6(0x6), cbTable:     0(0)
//   col  0:  Action       oCol: 0, cbCol:2, short  
//   col  1:* Parent       oCol: 2, cbCol:2, HasDeclSecurity
//   col  2:  PermissionSet oCol: 4, cbCol:2, blob   
// =================================================
// 15(0xf): ClassLayout          cRecs:    0(0), cbRec:  8(0x8), cbTable:     0(0)
//   col  0:  PackingSize  oCol: 0, cbCol:2, USHORT 
//   col  1:  ClassSize    oCol: 2, cbCol:4, ULONG  
//   col  2:* Parent       oCol: 6, cbCol:2, TypeDef
// =================================================
// 16(0x10): FieldLayout          cRecs:    0(0), cbRec:  6(0x6), cbTable:     0(0)
//   col  0:  OffSet       oCol: 0, cbCol:4, ULONG  
//   col  1:* Field        oCol: 4, cbCol:2, Field  
// =================================================
// 17(0x11): StandAloneSig        cRecs:    0(0), cbRec:  2(0x2), cbTable:     0(0)
//   col  0:  Signature    oCol: 0, cbCol:2, blob   
// =================================================
// 18(0x12): EventMap             cRecs:    0(0), cbRec:  4(0x4), cbTable:     0(0)
//   col  0:  Parent       oCol: 0, cbCol:2, TypeDef
//   col  1:  EventList    oCol: 2, cbCol:2, Event  
// =================================================
// 19(0x13): EventPtr             cRecs:    0(0), cbRec:  2(0x2), cbTable:     0(0)
//   col  0:  Event        oCol: 0, cbCol:2, Event  
// =================================================
// 20(0x14): Event                cRecs:    0(0), cbRec:  6(0x6), cbTable:     0(0)
//   col  0:  EventFlags   oCol: 0, cbCol:2, USHORT 
//   col  1:  Name         oCol: 2, cbCol:2, string 
//   col  2:  EventType    oCol: 4, cbCol:2, TypeDefOrRef
// =================================================
// 21(0x15): PropertyMap          cRecs:    0(0), cbRec:  4(0x4), cbTable:     0(0)
//   col  0:  Parent       oCol: 0, cbCol:2, TypeDef
//   col  1:  PropertyList oCol: 2, cbCol:2, Property
// =================================================
// 22(0x16): PropertyPtr          cRecs:    0(0), cbRec:  2(0x2), cbTable:     0(0)
//   col  0:  Property     oCol: 0, cbCol:2, Property
// =================================================
// 23(0x17): Property             cRecs:    0(0), cbRec:  6(0x6), cbTable:     0(0)
//   col  0:  PropFlags    oCol: 0, cbCol:2, USHORT 
//   col  1:  Name         oCol: 2, cbCol:2, string 
//   col  2:  Type         oCol: 4, cbCol:2, blob   
// =================================================
// 24(0x18): MethodSemantics      cRecs:    0(0), cbRec:  6(0x6), cbTable:     0(0)
//   col  0:  Semantic     oCol: 0, cbCol:2, USHORT 
//   col  1:  Method       oCol: 2, cbCol:2, Method 
//   col  2:* Association  oCol: 4, cbCol:2, HasSemantic
// =================================================
// 25(0x19): MethodImpl           cRecs:   50(0x32), cbRec:  6(0x6), cbTable:   300(0x12c)
//   col  0:* Class        oCol: 0, cbCol:2, TypeDef
//   col  1:  MethodBody   oCol: 2, cbCol:2, MethodDefOrRef
//   col  2:  MethodDeclaration oCol: 4, cbCol:2, MethodDefOrRef
// -------------------------------------------------
//    1 == 0:TypeDef[2000020], 1:MethodDefOrRef[06000002], 2:MethodDefOrRef[06000001]
//    2 == 0:TypeDef[2000021], 1:MethodDefOrRef[06000003], 2:MethodDefOrRef[06000001]
//    3 == 0:TypeDef[2000022], 1:MethodDefOrRef[06000004], 2:MethodDefOrRef[0a000018]
//    4 == 0:TypeDef[2000029], 1:MethodDefOrRef[0600000b], 2:MethodDefOrRef[0600000a]
//    5 == 0:TypeDef[200002a], 1:MethodDefOrRef[0600000c], 2:MethodDefOrRef[0600000a]
//    6 == 0:TypeDef[2000031], 1:MethodDefOrRef[06000015], 2:MethodDefOrRef[0a000001]
//    7 == 0:TypeDef[2000031], 1:MethodDefOrRef[06000016], 2:MethodDefOrRef[0a000002]
//    8 == 0:TypeDef[2000031], 1:MethodDefOrRef[06000017], 2:MethodDefOrRef[06000012]
//    9 == 0:TypeDef[2000032], 1:MethodDefOrRef[06000018], 2:MethodDefOrRef[0a000019]
//    a == 0:TypeDef[2000033], 1:MethodDefOrRef[06000019], 2:MethodDefOrRef[0a000003]
//    b == 0:TypeDef[2000035], 1:MethodDefOrRef[0600001b], 2:MethodDefOrRef[0a000004]
//    c == 0:TypeDef[2000036], 1:MethodDefOrRef[0600001c], 2:MethodDefOrRef[0a000004]
//    d == 0:TypeDef[2000037], 1:MethodDefOrRef[0600001d], 2:MethodDefOrRef[0a000004]
//    e == 0:TypeDef[2000038], 1:MethodDefOrRef[0600001e], 2:MethodDefOrRef[0a000004]
//    f == 0:TypeDef[2000039], 1:MethodDefOrRef[0600001f], 2:MethodDefOrRef[0a000004]
//   10 == 0:TypeDef[200003a], 1:MethodDefOrRef[06000020], 2:MethodDefOrRef[0a000004]
//   11 == 0:TypeDef[200003c], 1:MethodDefOrRef[06000022], 2:MethodDefOrRef[06000021]
//   12 == 0:TypeDef[200003d], 1:MethodDefOrRef[06000023], 2:MethodDefOrRef[06000021]
//   13 == 0:TypeDef[200003e], 1:MethodDefOrRef[06000024], 2:MethodDefOrRef[0a00001a]
//   14 == 0:TypeDef[200003f], 1:MethodDefOrRef[06000025], 2:MethodDefOrRef[0a00001b]
//   15 == 0:TypeDef[2000041], 1:MethodDefOrRef[06000027], 2:MethodDefOrRef[06000026]
//   16 == 0:TypeDef[2000042], 1:MethodDefOrRef[06000028], 2:MethodDefOrRef[06000027]
//   17 == 0:TypeDef[2000044], 1:MethodDefOrRef[0600002a], 2:MethodDefOrRef[0a000005]
//   18 == 0:TypeDef[2000045], 1:MethodDefOrRef[0600002b], 2:MethodDefOrRef[0a000005]
//   19 == 0:TypeDef[2000046], 1:MethodDefOrRef[0600002c], 2:MethodDefOrRef[0a000005]
//   1a == 0:TypeDef[2000047], 1:MethodDefOrRef[0600002d], 2:MethodDefOrRef[0a000005]
//   1b == 0:TypeDef[2000049], 1:MethodDefOrRef[0600002f], 2:MethodDefOrRef[0a000006]
//   1c == 0:TypeDef[200004a], 1:MethodDefOrRef[06000030], 2:MethodDefOrRef[0a000007]
//   1d == 0:TypeDef[200004c], 1:MethodDefOrRef[06000032], 2:MethodDefOrRef[0a000008]
//   1e == 0:TypeDef[200004d], 1:MethodDefOrRef[06000033], 2:MethodDefOrRef[0a000008]
//   1f == 0:TypeDef[200004e], 1:MethodDefOrRef[06000034], 2:MethodDefOrRef[0a000009]
//   20 == 0:TypeDef[200004f], 1:MethodDefOrRef[06000035], 2:MethodDefOrRef[0a00000a]
//   21 == 0:TypeDef[2000050], 1:MethodDefOrRef[06000036], 2:MethodDefOrRef[0a000008]
//   22 == 0:TypeDef[2000052], 1:MethodDefOrRef[06000038], 2:MethodDefOrRef[0a00000b]
//   23 == 0:TypeDef[2000053], 1:MethodDefOrRef[06000039], 2:MethodDefOrRef[0a00000b]
//   24 == 0:TypeDef[2000054], 1:MethodDefOrRef[0600003a], 2:MethodDefOrRef[0a00000b]
//   25 == 0:TypeDef[2000055], 1:MethodDefOrRef[0600003b], 2:MethodDefOrRef[0a00000b]
//   26 == 0:TypeDef[2000057], 1:MethodDefOrRef[0600003d], 2:MethodDefOrRef[0a00000c]
//   27 == 0:TypeDef[2000058], 1:MethodDefOrRef[0600003e], 2:MethodDefOrRef[0a00000c]
//   28 == 0:TypeDef[200005a], 1:MethodDefOrRef[06000045], 2:MethodDefOrRef[0a00000d]
//   29 == 0:TypeDef[200005b], 1:MethodDefOrRef[06000046], 2:MethodDefOrRef[0a00000e]
//   2a == 0:TypeDef[200005c], 1:MethodDefOrRef[06000047], 2:MethodDefOrRef[0a00000f]
//   2b == 0:TypeDef[200005d], 1:MethodDefOrRef[06000048], 2:MethodDefOrRef[0a000010]
//   2c == 0:TypeDef[200005e], 1:MethodDefOrRef[06000049], 2:MethodDefOrRef[0a000011]
//   2d == 0:TypeDef[200005f], 1:MethodDefOrRef[0600004a], 2:MethodDefOrRef[0a000012]
//   2e == 0:TypeDef[2000061], 1:MethodDefOrRef[0600004c], 2:MethodDefOrRef[0a000013]
//   2f == 0:TypeDef[2000062], 1:MethodDefOrRef[0600004d], 2:MethodDefOrRef[0a000013]
//   30 == 0:TypeDef[2000064], 1:MethodDefOrRef[06000050], 2:MethodDefOrRef[0a000014]
//   31 == 0:TypeDef[2000065], 1:MethodDefOrRef[06000051], 2:MethodDefOrRef[0a000014]
//   32 == 0:TypeDef[2000066], 1:MethodDefOrRef[06000052], 2:MethodDefOrRef[0a000015]
// =================================================
// 26(0x1a): ModuleRef            cRecs:    0(0), cbRec:  2(0x2), cbTable:     0(0)
//   col  0:  Name         oCol: 0, cbCol:2, string 
// =================================================
// 27(0x1b): TypeSpec             cRecs:   25(0x19), cbRec:  2(0x2), cbTable:    50(0x32)
//   col  0:  Signature    oCol: 0, cbCol:2, blob   
// -------------------------------------------------
//    1 == 0:blob#1
//    2 == 0:blob#8
//    3 == 0:blob#f
//    4 == 0:blob#16
//    5 == 0:blob#1d
//    6 == 0:blob#24
//    7 == 0:blob#2b
//    8 == 0:blob#32
//    9 == 0:blob#39
//    a == 0:blob#4f
//    b == 0:blob#57
//    c == 0:blob#68
//    d == 0:blob#70
//    e == 0:blob#78
//    f == 0:blob#81
//   10 == 0:blob#8e
//   11 == 0:blob#97
//   12 == 0:blob#a0
//   13 == 0:blob#a9
//   14 == 0:blob#ba
//   15 == 0:blob#c2
//   16 == 0:blob#ca
//   17 == 0:blob#d7
//   18 == 0:blob#108
//   19 == 0:blob#112
// =================================================
// 28(0x1c): ImplMap              cRecs:    0(0), cbRec:  8(0x8), cbTable:     0(0)
//   col  0:  MappingFlags oCol: 0, cbCol:2, USHORT 
//   col  1:* MemberForwarded oCol: 2, cbCol:2, MemberForwarded
//   col  2:  ImportName   oCol: 4, cbCol:2, string 
//   col  3:  ImportScope  oCol: 6, cbCol:2, ModuleRef
// =================================================
// 29(0x1d): FieldRVA             cRecs:    0(0), cbRec:  6(0x6), cbTable:     0(0)
//   col  0:  RVA          oCol: 0, cbCol:4, ULONG  
//   col  1:* Field        oCol: 4, cbCol:2, Field  
// =================================================
// 30(0x1e): ENCLog               cRecs:    0(0), cbRec:  8(0x8), cbTable:     0(0)
//   col  0:  Token        oCol: 0, cbCol:4, ULONG  
//   col  1:  FuncCode     oCol: 4, cbCol:4, ULONG  
// =================================================
// 31(0x1f): ENCMap               cRecs:    0(0), cbRec:  4(0x4), cbTable:     0(0)
//   col  0:  Token        oCol: 0, cbCol:4, ULONG  
// =================================================
// 32(0x20): Assembly             cRecs:    1(0x1), cbRec: 22(0x16), cbTable:    22(0x16)
//   col  0:  HashAlgId    oCol: 0, cbCol:4, ULONG  
//   col  1:  MajorVersion oCol: 4, cbCol:2, USHORT 
//   col  2:  MinorVersion oCol: 6, cbCol:2, USHORT 
//   col  3:  BuildNumber  oCol: 8, cbCol:2, USHORT 
//   col  4:  RevisionNumber oCol: a, cbCol:2, USHORT 
//   col  5:  Flags        oCol: c, cbCol:4, ULONG  
//   col  6:  PublicKey    oCol:10, cbCol:2, blob   
//   col  7:  Name         oCol:12, cbCol:2, string 
//   col  8:  Locale       oCol:14, cbCol:2, string 
// -------------------------------------------------
//    1 == 0:00000000, 1:0000, 2:0000, 3:0000, 4:0000, 5:00000000, 6:blob#0, 7:string#751, 8:string#0
// =================================================
// 33(0x21): AssemblyProcessor    cRecs:    0(0), cbRec:  4(0x4), cbTable:     0(0)
//   col  0:  Processor    oCol: 0, cbCol:4, ULONG  
// =================================================
// 34(0x22): AssemblyOS           cRecs:    0(0), cbRec: 12(0xc), cbTable:     0(0)
//   col  0:  OSPlatformId oCol: 0, cbCol:4, ULONG  
//   col  1:  OSMajorVersion oCol: 4, cbCol:4, ULONG  
//   col  2:  OSMinorVersion oCol: 8, cbCol:4, ULONG  
// =================================================
// 35(0x23): AssemblyRef          cRecs:    1(0x1), cbRec: 20(0x14), cbTable:    20(0x14)
//   col  0:  MajorVersion oCol: 0, cbCol:2, USHORT 
//   col  1:  MinorVersion oCol: 2, cbCol:2, USHORT 
//   col  2:  BuildNumber  oCol: 4, cbCol:2, USHORT 
//   col  3:  RevisionNumber oCol: 6, cbCol:2, USHORT 
//   col  4:  Flags        oCol: 8, cbCol:4, ULONG  
//   col  5:  PublicKeyOrToken oCol: c, cbCol:2, blob   
//   col  6:  Name         oCol: e, cbCol:2, string 
//   col  7:  Locale       oCol:10, cbCol:2, string 
//   col  8:  HashValue    oCol:12, cbCol:2, blob   
// -------------------------------------------------
//    1 == 0:0000, 1:0000, 2:0000, 3:0000, 4:00000000, 5:blob#0, 6:string#80, 7:string#0, 8:blob#0
// =================================================
// 36(0x24): AssemblyRefProcessor cRecs:    0(0), cbRec:  6(0x6), cbTable:     0(0)
//   col  0:  Processor    oCol: 0, cbCol:4, ULONG  
//   col  1:  AssemblyRef  oCol: 4, cbCol:2, AssemblyRef
// =================================================
// 37(0x25): AssemblyRefOS        cRecs:    0(0), cbRec: 14(0xe), cbTable:     0(0)
//   col  0:  OSPlatformId oCol: 0, cbCol:4, ULONG  
//   col  1:  OSMajorVersion oCol: 4, cbCol:4, ULONG  
//   col  2:  OSMinorVersion oCol: 8, cbCol:4, ULONG  
//   col  3:  AssemblyRef  oCol: c, cbCol:2, AssemblyRef
// =================================================
// 38(0x26): File                 cRecs:    0(0), cbRec:  8(0x8), cbTable:     0(0)
//   col  0:  Flags        oCol: 0, cbCol:4, ULONG  
//   col  1:  Name         oCol: 4, cbCol:2, string 
//   col  2:  HashValue    oCol: 6, cbCol:2, blob   
// =================================================
// 39(0x27): ExportedType         cRecs:    0(0), cbRec: 14(0xe), cbTable:     0(0)
//   col  0:  Flags        oCol: 0, cbCol:4, ULONG  
//   col  1:  TypeDefId    oCol: 4, cbCol:4, ULONG  
//   col  2:  TypeName     oCol: 8, cbCol:2, string 
//   col  3:  TypeNamespace oCol: a, cbCol:2, string 
//   col  4:  Implementation oCol: c, cbCol:2, Implementation
// =================================================
// 40(0x28): ManifestResource     cRecs:    0(0), cbRec: 12(0xc), cbTable:     0(0)
//   col  0:  Offset       oCol: 0, cbCol:4, ULONG  
//   col  1:  Flags        oCol: 4, cbCol:4, ULONG  
//   col  2:  Name         oCol: 8, cbCol:2, string 
//   col  3:  Implementation oCol: a, cbCol:2, Implementation
// =================================================
// 41(0x29): NestedClass          cRecs:    1(0x1), cbRec:  4(0x4), cbTable:     4(0x4)
//   col  0:* NestedClass  oCol: 0, cbCol:2, TypeDef
//   col  1:  EnclosingClass oCol: 2, cbCol:2, TypeDef
// -------------------------------------------------
//    1 == 0:TypeDef[2000013], 1:TypeDef[2000012]
// =================================================
// 42(0x2a): GenericParam         cRecs:   40(0x28), cbRec:  8(0x8), cbTable:   320(0x140)
//   col  0:  Number       oCol: 0, cbCol:2, USHORT 
//   col  1:  Flags        oCol: 2, cbCol:2, USHORT 
//   col  2:* Owner        oCol: 4, cbCol:2, TypeOrMethodDef
//   col  3:  Name         oCol: 6, cbCol:2, string 
// -------------------------------------------------
//    1 == 0:0000, 1:0000, 2:TypeOrMethodDef[06000001], 3:string#9c
//    2 == 0:0000, 1:0000, 2:TypeOrMethodDef[06000002], 3:string#9c
//    3 == 0:0000, 1:0000, 2:TypeOrMethodDef[06000003], 3:string#9c
//    4 == 0:0000, 1:0000, 2:TypeOrMethodDef[06000004], 3:string#9c
//    5 == 0:0000, 1:0000, 2:TypeOrMethodDef[06000005], 3:string#9c
//    6 == 0:0000, 1:0000, 2:TypeOrMethodDef[06000006], 3:string#9c
//    7 == 0:0000, 1:0000, 2:TypeOrMethodDef[06000007], 3:string#9c
//    8 == 0:0000, 1:0000, 2:TypeOrMethodDef[02000008], 3:string#9c
//    9 == 0:0000, 1:0000, 2:TypeOrMethodDef[06000008], 3:string#9c
//    a == 0:0000, 1:0000, 2:TypeOrMethodDef[02000009], 3:string#9c
//    b == 0:0000, 1:0000, 2:TypeOrMethodDef[06000009], 3:string#9c
//    c == 0:0000, 1:0000, 2:TypeOrMethodDef[0200000a], 3:string#9c
//    d == 0:0000, 1:0000, 2:TypeOrMethodDef[0600000a], 3:string#9c
//    e == 0:0000, 1:0000, 2:TypeOrMethodDef[0200000b], 3:string#9c
//    f == 0:0000, 1:0000, 2:TypeOrMethodDef[0600000b], 3:string#9c
//   10 == 0:0000, 1:0000, 2:TypeOrMethodDef[0200000c], 3:string#9c
//   11 == 0:0000, 1:0000, 2:TypeOrMethodDef[0600000c], 3:string#9c
//   12 == 0:0000, 1:0000, 2:TypeOrMethodDef[0200000d], 3:string#9c
//   13 == 0:0000, 1:0000, 2:TypeOrMethodDef[0600000d], 3:string#9c
//   14 == 0:0000, 1:0000, 2:TypeOrMethodDef[0600000e], 3:string#9c
//   15 == 0:0000, 1:0000, 2:TypeOrMethodDef[0200000f], 3:string#9c
//   16 == 0:0000, 1:0000, 2:TypeOrMethodDef[0600000f], 3:string#9c
//   17 == 0:0000, 1:0000, 2:TypeOrMethodDef[06000010], 3:string#9c
//   18 == 0:0000, 1:0000, 2:TypeOrMethodDef[06000011], 3:string#9c
//   19 == 0:0000, 1:0000, 2:TypeOrMethodDef[02000018], 3:string#9c
//   1a == 0:0000, 1:0000, 2:TypeOrMethodDef[02000019], 3:string#9c
//   1b == 0:0000, 1:0000, 2:TypeOrMethodDef[0200001a], 3:string#9c
//   1c == 0:0000, 1:0001, 2:TypeOrMethodDef[0200001b], 3:string#9c
//   1d == 0:0000, 1:0001, 2:TypeOrMethodDef[0200001c], 3:string#9c
//   1e == 0:0000, 1:0001, 2:TypeOrMethodDef[0200001d], 3:string#9c
//   1f == 0:0000, 1:0000, 2:TypeOrMethodDef[02000043], 3:string#9c
//   20 == 0:0000, 1:0000, 2:TypeOrMethodDef[02000044], 3:string#9c
//   21 == 0:0000, 1:0000, 2:TypeOrMethodDef[02000045], 3:string#9c
//   22 == 0:0000, 1:0000, 2:TypeOrMethodDef[02000046], 3:string#9c
//   23 == 0:0000, 1:0000, 2:TypeOrMethodDef[02000047], 3:string#9c
//   24 == 0:0000, 1:0000, 2:TypeOrMethodDef[02000051], 3:string#9c
//   25 == 0:0000, 1:0000, 2:TypeOrMethodDef[02000052], 3:string#9c
//   26 == 0:0000, 1:0000, 2:TypeOrMethodDef[02000053], 3:string#9c
//   27 == 0:0000, 1:0000, 2:TypeOrMethodDef[02000054], 3:string#9c
//   28 == 0:0000, 1:0000, 2:TypeOrMethodDef[02000055], 3:string#9c
// =================================================
// 43(0x2b): MethodSpec           cRecs:    0(0), cbRec:  4(0x4), cbTable:     0(0)
//   col  0:  Method       oCol: 0, cbCol:2, MethodDefOrRef
//   col  1:  Instantiation oCol: 2, cbCol:2, blob   
// =================================================
// 44(0x2c): GenericParamConstraint cRecs:   13(0xd), cbRec:  4(0x4), cbTable:    52(0x34)
//   col  0:* Owner        oCol: 0, cbCol:2, GenericParam
//   col  1:  Constraint   oCol: 2, cbCol:2, TypeDefOrRef
// -------------------------------------------------
//    1 == 0:GenericParam[2a000001], 1:TypeDefOrRef[02000004]
//    2 == 0:GenericParam[2a000002], 1:TypeDefOrRef[02000003]
//    3 == 0:GenericParam[2a000004], 1:TypeDefOrRef[02000004]
//    4 == 0:GenericParam[2a000005], 1:TypeDefOrRef[02000004]
//    5 == 0:GenericParam[2a000006], 1:TypeDefOrRef[02000003]
//    6 == 0:GenericParam[2a000009], 1:TypeDefOrRef[02000004]
//    7 == 0:GenericParam[2a00000b], 1:TypeDefOrRef[02000004]
//    8 == 0:GenericParam[2a00000d], 1:TypeDefOrRef[02000004]
//    9 == 0:GenericParam[2a00000f], 1:TypeDefOrRef[02000003]
//    a == 0:GenericParam[2a000013], 1:TypeDefOrRef[02000004]
//    b == 0:GenericParam[2a000014], 1:TypeDefOrRef[02000003]
//    c == 0:GenericParam[2a000017], 1:TypeDefOrRef[02000004]
//    d == 0:GenericParam[2a000018], 1:TypeDefOrRef[02000004]
// 
// Blob Heap:  480(0x1e0) bytes
//     0,0 :                                                  >                <
//     1,6 : 15 12 20 01 13 00                                >                <
//     8,6 : 15 12 24 01 13 00                                >  $             <
//     f,6 : 15 12 28 01 13 00                                >  (             <
//    16,6 : 15 12 3c 01 12 10                                >  <             <
//    1d,6 : 15 12 60 01 13 00                                >  `             <
//    24,6 : 15 12 64 01 13 00                                >  d             <
//    2b,6 : 15 12 6c 01 13 00                                >  l             <
//    32,6 : 15 12 70 01 13 00                                >  p             <
//    39,3 : 12 80 c0                                         >                <
//    3d,5 : 20 01 01 12 14                                   >                <
//    43,5 : 20 01 01 12 18                                   >                <
//    49,5 : 20 01 01 12 1c                                   >                <
//    4f,3 : 12 80 d0                                         >                <
//    53,3 : 20 00 1c                                         >                <
//    57,7 : 15 12 81 0c 01 13 00                             >                <
//    5f,8 : 20 00 15 12 20 01 13 00                          >                <
//    68,7 : 15 12 81 10 01 13 00                             >                <
//    70,7 : 15 12 81 14 01 13 00                             >                <
//    78,3 : 12 81 20                                         >                <
//    7c,4 : 20 00 12 38                                      >   8            <
//    81,3 : 12 81 24                                         >  $             <
//    85,8 : 20 00 15 12 3c 01 12 10                          >    <           <
//    8e,3 : 12 81 2c                                         >  ,             <
//    92,4 : 20 00 12 54                                      >   T            <
//    97,3 : 12 81 30                                         >  0             <
//    9b,4 : 20 00 12 58                                      >   X            <
//    a0,3 : 12 81 34                                         >  4             <
//    a4,4 : 20 00 12 5c                                      >   \            <
//    a9,7 : 15 12 81 44 01 13 00                             >   D            <
//    b1,8 : 20 00 15 12 60 01 13 00                          >    `           <
//    ba,7 : 15 12 81 48 01 13 00                             >   H            <
//    c2,7 : 15 12 81 4c 01 13 00                             >   L            <
//    ca,3 : 12 81 58                                         >  X             <
//    ce,8 : 20 00 15 12 6c 01 12 08                          >    l           <
//    d7,3 : 12 81 64                                         >  d             <
//    db,4 : 20 01 01 0e                                      >                <
//    e0,6 : 20 01 01 12 81 64                                >     d          <
//    e7,9 : 20 01 01 14 1c 01 00 01  00                      >                <
//    f1,9 : 20 01 01 14 0e 01 00 01  00                      >                <
//    fb,5 : 20 01 01 1d 1c                                   >                <
//   101,6 : 20 01 01 1d 1d 1c                                >                <
//   108,3 : 12 81 80                                         >                <
//   10c,5 : 20 01 01 12 10                                   >                <
//   112,3 : 12 81 8c                                         >                <
//   116,5 : 20 01 01 12 5c                                   >    \           <
//   11c,5 : 20 01 01 12 54                                   >    T           <
//   122,5 : 00 01 12 19 0e                                   >                <
//   128,7 : 30 01 01 1e 00 1e 00                             >0               <
//   130,5 : 20 01 01 12 0c                                   >                <
//   136,3 : 20 00 0e                                         >                <
//   13a,5 : 20 00 12 80 d8                                   >                <
//   140,8 : 20 00 14 1c 01 00 01 00                          >                <
//   149,8 : 20 00 14 0e 01 00 01 00                          >                <
//   152,4 : 20 00 1d 1c                                      >                <
//   157,5 : 20 00 1d 1d 1c                                   >                <
//   15d,4 : 20 00 12 08                                      >                <
//   162,4 : 20 00 12 0c                                      >                <
//   167,4 : 20 00 12 10                                      >                <
//   16c,4 : 20 00 12 44                                      >   D            <
//   171,4 : 20 00 12 4c                                      >   L            <
//   176,4 : 20 00 12 50                                      >   P            <
//   17b,8 : 20 00 15 12 24 01 13 00                          >    $           <
//   184,8 : 20 00 15 12 28 01 13 00                          >    (           <
//   18d,4 : 20 00 12 40                                      >   @            <
//   192,4 : 20 00 12 78                                      >   x            <
//   197,8 : 20 00 15 12 64 01 13 00                          >    d           <
//   1a0,8 : 20 00 15 12 68 01 13 00                          >    h           <
//   1a9,8 : 20 00 15 12 6c 01 12 0c                          >    l           <
//   1b2,8 : 20 00 15 12 70 01 12 0c                          >    p           <
//   1bb,4 : 20 01 01 1c                                      >                <
//   1c0,5 : 20 01 01 12 08                                   >                <
//   1c6,5 : 20 01 01 12 58                                   >    X           <
//   1cc,5 : 20 01 01 12 78                                   >    x           <
//   1d2,3 : 00 00 08                                         >                <
//   1d6,3 : 00 00 01                                         >                <
//   1da,4 : 00 01 01 0e                                      >                <
//   1df,0 :                                                  >                <
// 
// String Heap:  1891(0x763) bytes
// 00000001: <Module>
// 0000000a: System
// 00000011: Object
// 00000018: ValueType
// 00000022: M
// 00000024: TypeLoadException
// 00000036: Exception
// 00000040: .ctor
// 00000046: MissingMethodException
// 0000005d: Type
// 00000062: GetType
// 0000006a: variance_override.exe
// 00000080: mscorlib
// 00000089: A
// 0000008b: B
// 0000008d: C
// 0000008f: D0
// 00000092: D1
// 00000095: D2
// 00000098: A`1
// 0000009c: T
// 0000009e: B`1
// 000000a2: C`1
// 000000a6: D0`1
// 000000ab: D1`1
// 000000b0: D2`1
// 000000b5: XA
// 000000b8: XB`1
// 000000bd: XC
// 000000c0: NA
// 000000c3: N
// 000000c5: NB
// 000000c8: NC
// 000000cb: IA
// 000000ce: IB
// 000000d1: IC
// 000000d4: IA`1
// 000000d9: IB`1
// 000000de: IC`1
// 000000e3: ICoA`1
// 000000ea: ICoB`1
// 000000f1: ICoC`1
// 000000f8: StructIA
// 00000101: MethodConstraint
// 00000112: MethodConstraintWeaker
// 00000129: MethodConstraintWeakest
// 00000141: MethodConstraintStrongAgain
// 0000015d: MethodConstraintImplicit
// 00000176: MethodConstraintImplicitWeaker
// 00000195: MethodConstraintImplicitWeakest
// 000001b5: MethodConstraintImplicitStrongerAgain
// 000001db: MethodConstraintImplicitStrongAgain
// 000001ff: MethodIConstraint
// 00000211: MethodIConstraintWeaker
// 00000229: MethodIConstraintWeakest
// 00000242: MethodIConstraintImplicit
// 0000025c: MethodIConstraintImplicitWeaker
// 0000027c: MethodIConstraintImplicitWeakest
// 0000029d: MethodIConstraintImplicitStrongerAgain
// 000002c4: MethodIConstraintImplicitStrongAgain
// 000002e9: Overload
// 000002f2: Overload3For3
// 00000300: OverloadImplicitBad
// 00000314: OverloadExplictBad
// 00000327: Covariant
// 00000331: CovariantString
// 00000341: CovariantClass
// 00000350: CovariantArray
// 0000035f: CovariantStringArray
// 00000374: CovariantSZArray
// 00000385: CovariantSZArraySZArray
// 0000039d: CovariantDerivedA
// 000003af: CovariantDerivedAB
// 000003c2: CovariantDerivedAC
// 000003d5: CovariantDerivedABC
// 000003e9: CovariantDerivedACB
// 000003fd: CovariantDerivedNA
// 00000410: CovariantDerivedNB
// 00000423: CovariantDerivedNC
// 00000436: CovariantA`1
// 00000443: CovariantAB`1
// 00000451: CovariantAC`1
// 0000045f: CovariantABC`1
// 0000046e: CovariantACB`1
// 0000047d: CovariantMixedA
// 0000048d: CovariantMixedB
// 0000049d: CovariantMixedC
// 000004ad: CovariantIA
// 000004b9: CovariantIAB
// 000004c6: CovariantIAC
// 000004d3: CovariantIABC
// 000004e1: CovariantIACB
// 000004ef: CovariantStructIA
// 00000501: CovariantIA`1
// 0000050f: CovariantIAB`1
// 0000051e: CovariantIAC`1
// 0000052d: CovariantIABC`1
// 0000053d: CovariantIACB`1
// 0000054d: CovariantICoAofA
// 0000055e: CovariantICoAofB
// 0000056f: CovariantICoBofB
// 00000580: Contravariant
// 0000058e: ContravariantString
// 000005a2: ContravariantClass
// 000005b5: ContravariantArray
// 000005c8: ContravariantStringArray
// 000005e1: ContravariantSzArray
// 000005f6: ContravariantSzArraySzArray
// 00000612: ContravariantDerivedC
// 00000628: ContravariantDerivedCB
// 0000063f: ContravariantDerivedCA
// 00000656: ContravariantIA
// 00000666: ContravariantICB
// 00000677: ContravariantICA
// 00000688: ContravariantStructIA
// 0000069e: Program
// 000006a6: M0
// 000006a9: arg
// 000006ad: M1
// 000006b0: M2
// 000006b3: M_D0
// 000006b8: M_D1
// 000006bd: M_C
// 000006c1: A_0
// 000006c5: Run
// 000006c9: CovariantGeneric
// 000006da: GenericParameterConstraint
// 000006f5: BadTypeLoadException
// 0000070a: LoadThrowsTypeLoadException
// 00000726: name
// 0000072b: LoadThrowsMissingMethodException
// 0000074c: Load
// 00000751: variance_override
// 
// User Strings
// -------------------------------------------------------
// 70000001 : (16) L"CovariantICoBofB"
// 70000023 : (13) L"Overload3For3"
// 7000003f : (19) L"OverloadImplicitBad"
// 70000067 : (18) L"OverloadExplictBad"
// 7000008d : (13) L"CovariantAB`1"
// 700000a9 : (13) L"CovariantAC`1"
// 700000c5 : (14) L"CovariantABC`1"
// 700000e3 : (14) L"CovariantIAB`1"
// 70000101 : (14) L"CovariantIAC`1"
// 7000011f : (15) L"CovariantIABC`1"
// 7000013f : (15) L"CovariantMixedB"
// 7000015f : (15) L"CovariantMixedC"
// 7000017f : (14) L"CovariantACB`1"
// 7000019d : (15) L"CovariantIACB`1"
// 700001bd : (15) L"CovariantString"
// 700001dd : (14) L"CovariantClass"
// 700001fb : (14) L"CovariantArray"
// 70000219 : (20) L"CovariantStringArray"
// 70000243 : (16) L"CovariantSZArray"
// 70000265 : (23) L"CovariantSZArraySZArray"
// 70000295 : (18) L"CovariantDerivedAB"
// 700002bb : (18) L"CovariantDerivedAC"
// 700002e1 : (19) L"CovariantDerivedACB"
// 70000309 : (18) L"CovariantDerivedNC"
// 7000032f : (12) L"CovariantIAB"
// 70000349 : (12) L"CovariantIAC"
// 70000363 : (13) L"CovariantIABC"
// 7000037f : (13) L"CovariantIACB"
// 7000039b : (17) L"CovariantStructIA"
// 700003bf : (19) L"ContravariantString"
// 700003e7 : (18) L"ContravariantClass"
// 7000040d : (18) L"ContravariantArray"
// 70000433 : (24) L"ContravariantStringArray"
// 70000465 : (20) L"ContravariantSZArray"
// 7000048f : (27) L"ContravariantSZArraySZArray"
// 700004c7 : (22) L"ContravariantDerivedCB"
// 700004f5 : (22) L"ContravariantDerivedCA"
// 70000523 : (16) L"ContravariantICB"
// 70000545 : (16) L"ContravariantICA"
// 70000567 : (21) L"ContravariantStructIA"
// 70000593 : (22) L"MethodConstraintWeaker"
// 700005c1 : (23) L"MethodConstraintWeakest"
// 700005f1 : (27) L"MethodConstraintStrongAgain"
// 70000629 : (30) L"MethodConstraintImplicitWeaker"
// 70000667 : (31) L"MethodConstraintImplicitWeakest"
// 700006a7 : (35) L"MethodConstraintImplicitStrongAgain"
// 700006ef : (37) L"MethodConstraintImplicitStrongerAgain"
// 7000073b : (23) L"MethodIConstraintWeaker"
// 7000076b : (24) L"MethodIConstraintWeakest"
// 7000079d : (31) L"MethodIConstraintImplicitWeaker"
// 700007dd : (32) L"MethodIConstraintImplicitWeakest"
// 7000081f : (36) L"MethodIConstraintImplicitStrongAgain"
// 70000869 : (38) L"MethodIConstraintImplicitStrongerAgain"
// ===========================================================
// ===========================================================
// ===========================================================
// ================================= END OF METAINFO ================================================


// Metadata version: v4.0.30319
.assembly extern /*23000001*/ mscorlib
{
  .ver 0:0:0:0
}
.assembly /*20000001*/ variance_override
{
  .ver 0:0:0:0
}
.module variance_override.exe
// MVID: {3A63AFC6-471C-483A-A8B2-CCE2972BF840}
.imagebase 0x00400000
.file alignment 0x00000200
.stackreserve 0x00100000
.subsystem 0x0003       // WINDOWS_CUI
.corflags 0x00000001    //  ILONLY
// Image base: 0x02C20000


// =============== CLASS MEMBERS DECLARATION ===================

.class /*02000002*/ public abstract auto ansi A
       extends [mscorlib/*23000001*/]System.Object/*01000001*/
{
} // end of class A

.class /*02000003*/ public abstract auto ansi B
       extends A/*02000002*/
{
} // end of class B

.class /*02000004*/ public abstract auto ansi C
       extends B/*02000003*/
{
} // end of class C

.class /*02000005*/ public abstract auto ansi D0
       extends C/*02000004*/
{
} // end of class D0

.class /*02000006*/ public abstract auto ansi D1
       extends C/*02000004*/
{
} // end of class D1

.class /*02000007*/ public abstract auto ansi D2
       extends C/*02000004*/
{
} // end of class D2

.class /*02000008*/ public abstract auto ansi A`1<T>
       extends [mscorlib/*23000001*/]System.Object/*01000001*/
{
} // end of class A`1

.class /*02000009*/ public abstract auto ansi B`1<T>
       extends class A`1/*02000008*/<!T>/*1B000001*/
{
} // end of class B`1

.class /*0200000A*/ public abstract auto ansi C`1<T>
       extends class B`1/*02000009*/<!T>/*1B000002*/
{
} // end of class C`1

.class /*0200000B*/ public abstract auto ansi D0`1<T>
       extends class C`1/*0200000A*/<!T>/*1B000003*/
{
} // end of class D0`1

.class /*0200000C*/ public abstract auto ansi D1`1<T>
       extends class C`1/*0200000A*/<!T>/*1B000003*/
{
} // end of class D1`1

.class /*0200000D*/ public abstract auto ansi D2`1<T>
       extends class C`1/*0200000A*/<!T>/*1B000003*/
{
} // end of class D2`1

.class /*0200000E*/ public abstract auto ansi XA
       extends [mscorlib/*23000001*/]System.Object/*01000001*/
{
} // end of class XA

.class /*0200000F*/ public abstract auto ansi XB`1<T>
       extends XA/*0200000E*/
{
} // end of class XB`1

.class /*02000010*/ public abstract auto ansi XC
       extends class XB`1/*0200000F*/<class C/*02000004*/>/*1B000004*/
{
} // end of class XC

.class /*02000011*/ public auto ansi NA
       extends [mscorlib/*23000001*/]System.Object/*01000001*/
{
} // end of class NA

.class /*02000012*/ public auto ansi N
       extends [mscorlib/*23000001*/]System.Object/*01000001*/
{
  .class /*02000013*/ auto ansi nested public NB
         extends NA/*02000011*/
  {
  } // end of class NB

} // end of class N

.class /*02000014*/ public auto ansi NC
       extends N/*02000012*//NB/*02000013*/
{
} // end of class NC

.class /*02000015*/ interface public abstract auto ansi IA
{
} // end of class IA

.class /*02000016*/ interface public abstract auto ansi IB
       implements IA/*02000015*/
{
} // end of class IB

.class /*02000017*/ interface public abstract auto ansi IC
       implements IB/*02000016*/
{
} // end of class IC

.class /*02000018*/ interface public abstract auto ansi IA`1<T>
{
} // end of class IA`1

.class /*02000019*/ interface public abstract auto ansi IB`1<T>
       implements class IA`1/*02000018*/<!T>/*1B000005*/
{
} // end of class IB`1

.class /*0200001A*/ interface public abstract auto ansi IC`1<T>
       implements class IB`1/*02000019*/<!T>/*1B000006*/
{
} // end of class IC`1

.class /*0200001B*/ interface public abstract auto ansi ICoA`1<+ T>
{
} // end of class ICoA`1

.class /*0200001C*/ interface public abstract auto ansi ICoB`1<+ T>
       implements class ICoA`1/*0200001B*/<!T>/*1B000007*/
{
} // end of class ICoB`1

.class /*0200001D*/ interface public abstract auto ansi ICoC`1<+ T>
       implements class ICoB`1/*0200001C*/<!T>/*1B000008*/
{
} // end of class ICoC`1

.class /*0200001E*/ public auto ansi sealed StructIA
       extends [mscorlib/*23000001*/]System.ValueType/*01000002*/
       implements IA/*02000015*/
{
} // end of class StructIA

.class /*0200001F*/ public abstract auto ansi MethodConstraint
       extends [mscorlib/*23000001*/]System.Object/*01000001*/
{
  .method /*06000001*/ public abstract virtual 
          instance !!T  M0<(C/*02000004*/) T>(!!T arg) cil managed
  {
  } // end of method MethodConstraint::M0

} // end of class MethodConstraint

.class /*02000020*/ public abstract auto ansi MethodConstraintWeaker
       extends MethodConstraint/*0200001F*/
{
  .method /*06000002*/ public abstract virtual 
          instance !!T  M1<(B/*02000003*/) T>(!!T arg) cil managed
  {
    .override MethodConstraint/*0200001F*/::M0 /*0200001F::06000001*/ 
  } // end of method MethodConstraintWeaker::M1

} // end of class MethodConstraintWeaker

.class /*02000021*/ public abstract auto ansi MethodConstraintWeakest
       extends MethodConstraint/*0200001F*/
{
  .method /*06000003*/ public abstract virtual 
          instance !!T  M1<T>(!!T arg) cil managed
  {
    .override MethodConstraint/*0200001F*/::M0 /*0200001F::06000001*/ 
  } // end of method MethodConstraintWeakest::M1

} // end of class MethodConstraintWeakest

.class /*02000022*/ public abstract auto ansi MethodConstraintStrongAgain
       extends MethodConstraintWeakest/*02000021*/
{
  .method /*06000004*/ public abstract virtual 
          instance !!T  M2<(C/*02000004*/) T>(!!T arg) cil managed
  {
    .override MethodConstraintWeakest/*01000007*/::M0 /*01000007::0A000018*/ 
  } // end of method MethodConstraintStrongAgain::M2

} // end of class MethodConstraintStrongAgain

.class /*02000023*/ public abstract auto ansi MethodConstraintImplicit
       extends [mscorlib/*23000001*/]System.Object/*01000001*/
{
  .method /*06000005*/ public abstract virtual 
          instance !!T  M<(C/*02000004*/) T>(!!T arg) cil managed
  {
  } // end of method MethodConstraintImplicit::M

} // end of class MethodConstraintImplicit

.class /*02000024*/ public abstract auto ansi MethodConstraintImplicitWeaker
       extends MethodConstraintImplicit/*02000023*/
{
  .method /*06000006*/ public abstract virtual 
          instance !!T  M<(B/*02000003*/) T>(!!T arg) cil managed
  {
  } // end of method MethodConstraintImplicitWeaker::M

} // end of class MethodConstraintImplicitWeaker

.class /*02000025*/ public abstract auto ansi MethodConstraintImplicitWeakest
       extends MethodConstraintImplicit/*02000023*/
{
  .method /*06000007*/ public abstract virtual 
          instance !!T  M<T>(!!T arg) cil managed
  {
  } // end of method MethodConstraintImplicitWeakest::M

} // end of class MethodConstraintImplicitWeakest

.class /*02000026*/ public abstract auto ansi MethodConstraintImplicitStrongerAgain
       extends MethodConstraintImplicitWeaker/*02000024*/
{
  .method /*06000008*/ public abstract virtual 
          instance !!T  M<(C/*02000004*/) T>(!!T arg) cil managed
  {
  } // end of method MethodConstraintImplicitStrongerAgain::M

} // end of class MethodConstraintImplicitStrongerAgain

.class /*02000027*/ public abstract auto ansi MethodConstraintImplicitStrongAgain
       extends MethodConstraintImplicitWeakest/*02000025*/
{
  .method /*06000009*/ public abstract virtual 
          instance !!T  M<(C/*02000004*/) T>(!!T arg) cil managed
  {
  } // end of method MethodConstraintImplicitStrongAgain::M

} // end of class MethodConstraintImplicitStrongAgain

.class /*02000028*/ interface public abstract auto ansi MethodIConstraint
{
  .method /*0600000A*/ public newslot abstract virtual 
          instance !!T  M0<(C/*02000004*/) T>(!!T arg) cil managed
  {
  } // end of method MethodIConstraint::M0

} // end of class MethodIConstraint

.class /*02000029*/ public abstract auto ansi MethodIConstraintWeaker
       extends [mscorlib/*23000001*/]System.Object/*01000001*/
       implements MethodIConstraint/*02000028*/
{
  .method /*0600000B*/ public newslot abstract virtual 
          instance !!T  M1<(B/*02000003*/) T>(!!T arg) cil managed
  {
    .override MethodIConstraint/*02000028*/::M0 /*02000028::0600000A*/ 
  } // end of method MethodIConstraintWeaker::M1

} // end of class MethodIConstraintWeaker

.class /*0200002A*/ public abstract auto ansi MethodIConstraintWeakest
       extends [mscorlib/*23000001*/]System.Object/*01000001*/
       implements MethodIConstraint/*02000028*/
{
  .method /*0600000C*/ public newslot abstract virtual 
          instance !!T  M1<T>(!!T arg) cil managed
  {
    .override MethodIConstraint/*02000028*/::M0 /*02000028::0600000A*/ 
  } // end of method MethodIConstraintWeakest::M1

} // end of class MethodIConstraintWeakest

.class /*0200002B*/ interface public abstract auto ansi MethodIConstraintImplicit
{
  .method /*0600000D*/ public newslot abstract virtual 
          instance !!T  M<(C/*02000004*/) T>(!!T arg) cil managed
  {
  } // end of method MethodIConstraintImplicit::M

} // end of class MethodIConstraintImplicit

.class /*0200002C*/ public abstract auto ansi MethodIConstraintImplicitWeaker
       extends [mscorlib/*23000001*/]System.Object/*01000001*/
       implements MethodIConstraintImplicit/*0200002B*/
{
  .method /*0600000E*/ public newslot abstract virtual 
          instance !!T  M<(B/*02000003*/) T>(!!T arg) cil managed
  {
  } // end of method MethodIConstraintImplicitWeaker::M

} // end of class MethodIConstraintImplicitWeaker

.class /*0200002D*/ public abstract auto ansi MethodIConstraintImplicitWeakest
       extends [mscorlib/*23000001*/]System.Object/*01000001*/
       implements MethodIConstraintImplicit/*0200002B*/
{
  .method /*0600000F*/ public newslot abstract virtual 
          instance !!T  M<T>(!!T arg) cil managed
  {
  } // end of method MethodIConstraintImplicitWeakest::M

} // end of class MethodIConstraintImplicitWeakest

.class /*0200002E*/ public abstract auto ansi MethodIConstraintImplicitStrongerAgain
       extends MethodIConstraintImplicitWeaker/*0200002C*/
{
  .method /*06000010*/ public abstract virtual 
          instance !!T  M<(C/*02000004*/) T>(!!T arg) cil managed
  {
  } // end of method MethodIConstraintImplicitStrongerAgain::M

} // end of class MethodIConstraintImplicitStrongerAgain

.class /*0200002F*/ public abstract auto ansi MethodIConstraintImplicitStrongAgain
       extends MethodIConstraintImplicitWeakest/*0200002D*/
{
  .method /*06000011*/ public abstract virtual 
          instance !!T  M<(C/*02000004*/) T>(!!T arg) cil managed
  {
  } // end of method MethodIConstraintImplicitStrongAgain::M

} // end of class MethodIConstraintImplicitStrongAgain

.class /*02000030*/ public abstract auto ansi Overload
       extends [mscorlib/*23000001*/]System.Object/*01000001*/
{
  .method /*06000012*/ public abstract virtual 
          instance void  M(class C/*02000004*/ arg) cil managed
  {
  } // end of method Overload::M

  .method /*06000013*/ public abstract virtual 
          instance void  M(class D0/*02000005*/ arg) cil managed
  {
  } // end of method Overload::M

  .method /*06000014*/ public abstract virtual 
          instance void  M(class D1/*02000006*/ arg) cil managed
  {
  } // end of method Overload::M

} // end of class Overload

.class /*02000031*/ public abstract auto ansi Overload3For3
       extends Overload/*02000030*/
{
  .method /*06000015*/ public abstract virtual 
          instance void  M_D0(class B/*02000003*/ arg) cil managed
  {
    .override  method instance void class Overload/*02000030*//*1B000009*/::M(class D0/*02000005*/) /* 0A000001 */
  } // end of method Overload3For3::M_D0

  .method /*06000016*/ public abstract virtual 
          instance void  M_D1(class B/*02000003*/ arg) cil managed
  {
    .override  method instance void class Overload/*02000030*//*1B000009*/::M(class D1/*02000006*/) /* 0A000002 */
  } // end of method Overload3For3::M_D1

  .method /*06000017*/ public abstract virtual 
          instance void  M_C(class C/*02000004*/ arg) cil managed
  {
    .override Overload/*02000030*/::M /*02000030::06000012*/ 
  } // end of method Overload3For3::M_C

} // end of class Overload3For3

.class /*02000032*/ public abstract auto ansi OverloadImplicitBad
       extends Overload/*02000030*/
{
  .method /*06000018*/ public abstract virtual 
          instance void  M(class D2/*02000007*/ arg) cil managed
  {
    .override Overload/*01000008*/::M /*01000008::0A000019*/ 
  } // end of method OverloadImplicitBad::M

} // end of class OverloadImplicitBad

.class /*02000033*/ public abstract auto ansi OverloadExplictBad
       extends Overload/*02000030*/
{
  .method /*06000019*/ public abstract virtual 
          instance void  M_D1(class C/*02000004*/ arg) cil managed
  {
    .override  method instance void class Overload/*02000030*//*1B000009*/::M(class D2/*02000007*/) /* 0A000003 */
  } // end of method OverloadExplictBad::M_D1

} // end of class OverloadExplictBad

.class /*02000034*/ public abstract auto ansi Covariant
       extends [mscorlib/*23000001*/]System.Object/*01000001*/
{
  .method /*0600001A*/ public abstract virtual 
          instance object  M() cil managed
  {
  } // end of method Covariant::M

} // end of class Covariant

.class /*02000035*/ public abstract auto ansi CovariantString
       extends Covariant/*02000034*/
{
  .method /*0600001B*/ public abstract virtual 
          instance string  M() cil managed
  {
    .override  method instance object class Covariant/*02000034*//*1B00000A*/::M() /* 0A000004 */
  } // end of method CovariantString::M

} // end of class CovariantString

.class /*02000036*/ public abstract auto ansi CovariantClass
       extends Covariant/*02000034*/
{
  .method /*0600001C*/ public abstract virtual 
          instance class CovariantClass/*02000036*/ 
          M() cil managed
  {
    .override  method instance object class Covariant/*02000034*//*1B00000A*/::M() /* 0A000004 */
  } // end of method CovariantClass::M

} // end of class CovariantClass

.class /*02000037*/ public abstract auto ansi CovariantArray
       extends Covariant/*02000034*/
{
  .method /*0600001D*/ public abstract virtual 
          instance object[0...]  M() cil managed
  {
    .override  method instance object class Covariant/*02000034*//*1B00000A*/::M() /* 0A000004 */
  } // end of method CovariantArray::M

} // end of class CovariantArray

.class /*02000038*/ public abstract auto ansi CovariantStringArray
       extends Covariant/*02000034*/
{
  .method /*0600001E*/ public abstract virtual 
          instance string[0...]  M() cil managed
  {
    .override  method instance object class Covariant/*02000034*//*1B00000A*/::M() /* 0A000004 */
  } // end of method CovariantStringArray::M

} // end of class CovariantStringArray

.class /*02000039*/ public abstract auto ansi CovariantSZArray
       extends Covariant/*02000034*/
{
  .method /*0600001F*/ public abstract virtual 
          instance object[]  M() cil managed
  {
    .override  method instance object class Covariant/*02000034*//*1B00000A*/::M() /* 0A000004 */
  } // end of method CovariantSZArray::M

} // end of class CovariantSZArray

.class /*0200003A*/ public abstract auto ansi CovariantSZArraySZArray
       extends Covariant/*02000034*/
{
  .method /*06000020*/ public abstract virtual 
          instance object[][]  M() cil managed
  {
    .override  method instance object class Covariant/*02000034*//*1B00000A*/::M() /* 0A000004 */
  } // end of method CovariantSZArraySZArray::M

} // end of class CovariantSZArraySZArray

.class /*0200003B*/ public abstract auto ansi CovariantDerivedA
       extends [mscorlib/*23000001*/]System.Object/*01000001*/
{
  .method /*06000021*/ public abstract virtual 
          instance class A/*02000002*/  M() cil managed
  {
  } // end of method CovariantDerivedA::M

} // end of class CovariantDerivedA

.class /*0200003C*/ public abstract auto ansi CovariantDerivedAB
       extends CovariantDerivedA/*0200003B*/
{
  .method /*06000022*/ public abstract virtual 
          instance class B/*02000003*/  M() cil managed
  {
    .override CovariantDerivedA/*0200003B*/::M /*0200003B::06000021*/ 
  } // end of method CovariantDerivedAB::M

} // end of class CovariantDerivedAB

.class /*0200003D*/ public abstract auto ansi CovariantDerivedAC
       extends CovariantDerivedA/*0200003B*/
{
  .method /*06000023*/ public abstract virtual 
          instance class C/*02000004*/  M() cil managed
  {
    .override CovariantDerivedA/*0200003B*/::M /*0200003B::06000021*/ 
  } // end of method CovariantDerivedAC::M

} // end of class CovariantDerivedAC

.class /*0200003E*/ public abstract auto ansi CovariantDerivedABC
       extends CovariantDerivedAB/*0200003C*/
{
  .method /*06000024*/ public abstract virtual 
          instance class C/*02000004*/  M() cil managed
  {
    .override CovariantDerivedAB/*01000009*/::M /*01000009::0A00001A*/ 
  } // end of method CovariantDerivedABC::M

} // end of class CovariantDerivedABC

.class /*0200003F*/ public abstract auto ansi CovariantDerivedACB
       extends CovariantDerivedAC/*0200003D*/
{
  .method /*06000025*/ public abstract virtual 
          instance class B/*02000003*/  M() cil managed
  {
    .override CovariantDerivedAC/*0100000A*/::M /*0100000A::0A00001B*/ 
  } // end of method CovariantDerivedACB::M

} // end of class CovariantDerivedACB

.class /*02000040*/ public abstract auto ansi CovariantDerivedNA
       extends [mscorlib/*23000001*/]System.Object/*01000001*/
{
  .method /*06000026*/ public abstract virtual 
          instance class NA/*02000011*/  M() cil managed
  {
  } // end of method CovariantDerivedNA::M

} // end of class CovariantDerivedNA

.class /*02000041*/ public abstract auto ansi CovariantDerivedNB
       extends CovariantDerivedNA/*02000040*/
{
  .method /*06000027*/ public abstract virtual 
          instance class N/*02000012*//NB/*02000013*/ 
          M() cil managed
  {
    .override CovariantDerivedNA/*02000040*/::M /*02000040::06000026*/ 
  } // end of method CovariantDerivedNB::M

} // end of class CovariantDerivedNB

.class /*02000042*/ public abstract auto ansi CovariantDerivedNC
       extends CovariantDerivedNB/*02000041*/
{
  .method /*06000028*/ public abstract virtual 
          instance class NC/*02000014*/  M() cil managed
  {
    .override CovariantDerivedNB/*02000041*/::M /*02000041::06000027*/ 
  } // end of method CovariantDerivedNC::M

} // end of class CovariantDerivedNC

.class /*02000043*/ public abstract auto ansi CovariantA`1<T>
       extends [mscorlib/*23000001*/]System.Object/*01000001*/
{
  .method /*06000029*/ public abstract virtual 
          instance class A`1/*02000008*/<!T> 
          M() cil managed
  {
  } // end of method CovariantA`1::M

} // end of class CovariantA`1

.class /*02000044*/ public abstract auto ansi CovariantAB`1<T>
       extends class CovariantA`1/*02000043*/<!T>/*1B00000B*/
{
  .method /*0600002A*/ public abstract virtual 
          instance class B`1/*02000009*/<!T> 
          M() cil managed
  {
    .override  method instance class A`1/*02000008*/<!0> class CovariantA`1/*02000043*/<!T>/*1B00000B*/::M() /* 0A000005 */
  } // end of method CovariantAB`1::M

} // end of class CovariantAB`1

.class /*02000045*/ public abstract auto ansi CovariantAC`1<T>
       extends class CovariantA`1/*02000043*/<!T>/*1B00000B*/
{
  .method /*0600002B*/ public abstract virtual 
          instance class C`1/*0200000A*/<!T> 
          M() cil managed
  {
    .override  method instance class A`1/*02000008*/<!0> class CovariantA`1/*02000043*/<!T>/*1B00000B*/::M() /* 0A000005 */
  } // end of method CovariantAC`1::M

} // end of class CovariantAC`1

.class /*02000046*/ public abstract auto ansi CovariantABC`1<T>
       extends class CovariantAB`1/*02000044*/<!T>/*1B00000C*/
{
  .method /*0600002C*/ public abstract virtual 
          instance class C`1/*0200000A*/<!T> 
          M() cil managed
  {
    .override  method instance class A`1/*02000008*/<!0> class CovariantA`1/*02000043*/<!T>/*1B00000B*/::M() /* 0A000005 */
  } // end of method CovariantABC`1::M

} // end of class CovariantABC`1

.class /*02000047*/ public abstract auto ansi CovariantACB`1<T>
       extends class CovariantAC`1/*02000045*/<!T>/*1B00000D*/
{
  .method /*0600002D*/ public abstract virtual 
          instance class B`1/*02000009*/<!T> 
          M() cil managed
  {
    .override  method instance class A`1/*02000008*/<!0> class CovariantA`1/*02000043*/<!T>/*1B00000B*/::M() /* 0A000005 */
  } // end of method CovariantACB`1::M

} // end of class CovariantACB`1

.class /*02000048*/ public abstract auto ansi CovariantMixedA
       extends [mscorlib/*23000001*/]System.Object/*01000001*/
{
  .method /*0600002E*/ public abstract virtual 
          instance class XA/*0200000E*/  M() cil managed
  {
  } // end of method CovariantMixedA::M

} // end of class CovariantMixedA

.class /*02000049*/ public abstract auto ansi CovariantMixedB
       extends CovariantMixedA/*02000048*/
{
  .method /*0600002F*/ public abstract virtual 
          instance class XB`1/*0200000F*/<class C/*02000004*/> 
          M() cil managed
  {
    .override  method instance class XA/*0200000E*/ class CovariantMixedA/*02000048*//*1B00000E*/::M() /* 0A000006 */
  } // end of method CovariantMixedB::M

} // end of class CovariantMixedB

.class /*0200004A*/ public abstract auto ansi CovariantMixedC
       extends CovariantMixedB/*02000049*/
{
  .method /*06000030*/ public abstract virtual 
          instance class XC/*02000010*/  M() cil managed
  {
    .override  method instance class XB`1/*0200000F*/<class C/*02000004*/> class CovariantMixedB/*02000049*//*1B00000F*/::M() /* 0A000007 */
  } // end of method CovariantMixedC::M

} // end of class CovariantMixedC

.class /*0200004B*/ public abstract auto ansi CovariantIA
       extends [mscorlib/*23000001*/]System.Object/*01000001*/
{
  .method /*06000031*/ public abstract virtual 
          instance class IA/*02000015*/  M() cil managed
  {
  } // end of method CovariantIA::M

} // end of class CovariantIA

.class /*0200004C*/ public abstract auto ansi CovariantIAB
       extends CovariantIA/*0200004B*/
{
  .method /*06000032*/ public abstract virtual 
          instance class IB/*02000016*/  M() cil managed
  {
    .override  method instance class IA/*02000015*/ class CovariantIA/*0200004B*//*1B000010*/::M() /* 0A000008 */
  } // end of method CovariantIAB::M

} // end of class CovariantIAB

.class /*0200004D*/ public abstract auto ansi CovariantIAC
       extends CovariantIA/*0200004B*/
{
  .method /*06000033*/ public abstract virtual 
          instance class IC/*02000017*/  M() cil managed
  {
    .override  method instance class IA/*02000015*/ class CovariantIA/*0200004B*//*1B000010*/::M() /* 0A000008 */
  } // end of method CovariantIAC::M

} // end of class CovariantIAC

.class /*0200004E*/ public abstract auto ansi CovariantIABC
       extends CovariantIAB/*0200004C*/
{
  .method /*06000034*/ public abstract virtual 
          instance class IC/*02000017*/  M() cil managed
  {
    .override  method instance class IB/*02000016*/ class CovariantIAB/*0200004C*//*1B000011*/::M() /* 0A000009 */
  } // end of method CovariantIABC::M

} // end of class CovariantIABC

.class /*0200004F*/ public abstract auto ansi CovariantIACB
       extends CovariantIAC/*0200004D*/
{
  .method /*06000035*/ public abstract virtual 
          instance class IB/*02000016*/  M() cil managed
  {
    .override  method instance class IC/*02000017*/ class CovariantIAC/*0200004D*//*1B000012*/::M() /* 0A00000A */
  } // end of method CovariantIACB::M

} // end of class CovariantIACB

.class /*02000050*/ public abstract auto ansi CovariantStructIA
       extends CovariantIA/*0200004B*/
{
  .method /*06000036*/ public abstract virtual 
          instance class StructIA/*0200001E*/ 
          M() cil managed
  {
    .override  method instance class IA/*02000015*/ class CovariantIA/*0200004B*//*1B000010*/::M() /* 0A000008 */
  } // end of method CovariantStructIA::M

} // end of class CovariantStructIA

.class /*02000051*/ public abstract auto ansi CovariantIA`1<T>
       extends [mscorlib/*23000001*/]System.Object/*01000001*/
{
  .method /*06000037*/ public abstract virtual 
          instance class IA`1/*02000018*/<!T> 
          M() cil managed
  {
  } // end of method CovariantIA`1::M

} // end of class CovariantIA`1

.class /*02000052*/ public abstract auto ansi CovariantIAB`1<T>
       extends class CovariantIA`1/*02000051*/<!T>/*1B000013*/
{
  .method /*06000038*/ public abstract virtual 
          instance class IB`1/*02000019*/<!T> 
          M() cil managed
  {
    .override  method instance class IA`1/*02000018*/<!0> class CovariantIA`1/*02000051*/<!T>/*1B000013*/::M() /* 0A00000B */
  } // end of method CovariantIAB`1::M

} // end of class CovariantIAB`1

.class /*02000053*/ public abstract auto ansi CovariantIAC`1<T>
       extends class CovariantIA`1/*02000051*/<!T>/*1B000013*/
{
  .method /*06000039*/ public abstract virtual 
          instance class IC`1/*0200001A*/<!T> 
          M() cil managed
  {
    .override  method instance class IA`1/*02000018*/<!0> class CovariantIA`1/*02000051*/<!T>/*1B000013*/::M() /* 0A00000B */
  } // end of method CovariantIAC`1::M

} // end of class CovariantIAC`1

.class /*02000054*/ public abstract auto ansi CovariantIABC`1<T>
       extends class CovariantIAB`1/*02000052*/<!T>/*1B000014*/
{
  .method /*0600003A*/ public abstract virtual 
          instance class IC`1/*0200001A*/<!T> 
          M() cil managed
  {
    .override  method instance class IA`1/*02000018*/<!0> class CovariantIA`1/*02000051*/<!T>/*1B000013*/::M() /* 0A00000B */
  } // end of method CovariantIABC`1::M

} // end of class CovariantIABC`1

.class /*02000055*/ public abstract auto ansi CovariantIACB`1<T>
       extends class CovariantIAC`1/*02000053*/<!T>/*1B000015*/
{
  .method /*0600003B*/ public abstract virtual 
          instance class IB`1/*02000019*/<!T> 
          M() cil managed
  {
    .override  method instance class IA`1/*02000018*/<!0> class CovariantIA`1/*02000051*/<!T>/*1B000013*/::M() /* 0A00000B */
  } // end of method CovariantIACB`1::M

} // end of class CovariantIACB`1

.class /*02000056*/ public abstract auto ansi CovariantICoAofA
       extends [mscorlib/*23000001*/]System.Object/*01000001*/
{
  .method /*0600003C*/ public abstract virtual 
          instance class ICoA`1/*0200001B*/<class A/*02000002*/> 
          M() cil managed
  {
  } // end of method CovariantICoAofA::M

} // end of class CovariantICoAofA

.class /*02000057*/ public abstract auto ansi CovariantICoAofB
       extends CovariantICoAofA/*02000056*/
{
  .method /*0600003D*/ public abstract virtual 
          instance class ICoA`1/*0200001B*/<class B/*02000003*/> 
          M() cil managed
  {
    .override  method instance class ICoA`1/*0200001B*/<class A/*02000002*/> class CovariantICoAofA/*02000056*//*1B000016*/::M() /* 0A00000C */
  } // end of method CovariantICoAofB::M

} // end of class CovariantICoAofB

.class /*02000058*/ public abstract auto ansi CovariantICoBofB
       extends CovariantICoAofA/*02000056*/
{
  .method /*0600003E*/ public abstract virtual 
          instance class ICoB`1/*0200001C*/<class B/*02000003*/> 
          M() cil managed
  {
    .override  method instance class ICoA`1/*0200001B*/<class A/*02000002*/> class CovariantICoAofA/*02000056*//*1B000016*/::M() /* 0A00000C */
  } // end of method CovariantICoBofB::M

} // end of class CovariantICoBofB

.class /*02000059*/ public abstract auto ansi Contravariant
       extends [mscorlib/*23000001*/]System.Object/*01000001*/
{
  .method /*0600003F*/ public abstract virtual 
          instance void  M(string arg) cil managed
  {
  } // end of method Contravariant::M

  .method /*06000040*/ public abstract virtual 
          instance void  M(class Contravariant/*02000059*/ arg) cil managed
  {
  } // end of method Contravariant::M

  .method /*06000041*/ public abstract virtual 
          instance void  M(object[0...] arg) cil managed
  {
  } // end of method Contravariant::M

  .method /*06000042*/ public abstract virtual 
          instance void  M(string[0...] arg) cil managed
  {
  } // end of method Contravariant::M

  .method /*06000043*/ public abstract virtual 
          instance void  M(object[] arg) cil managed
  {
  } // end of method Contravariant::M

  .method /*06000044*/ public abstract virtual 
          instance void  M(object[][] arg) cil managed
  {
  } // end of method Contravariant::M

} // end of class Contravariant

.class /*0200005A*/ public abstract auto ansi ContravariantString
       extends Contravariant/*02000059*/
{
  .method /*06000045*/ public abstract virtual 
          instance void  M(object arg) cil managed
  {
    .override  method instance void class Contravariant/*02000059*//*1B000017*/::M(string) /* 0A00000D */
  } // end of method ContravariantString::M

} // end of class ContravariantString

.class /*0200005B*/ public abstract auto ansi ContravariantClass
       extends Contravariant/*02000059*/
{
  .method /*06000046*/ public abstract virtual 
          instance void  M(object arg) cil managed
  {
    .override  method instance void class Contravariant/*02000059*//*1B000017*/::M(class Contravariant/*02000059*/) /* 0A00000E */
  } // end of method ContravariantClass::M

} // end of class ContravariantClass

.class /*0200005C*/ public abstract auto ansi ContravariantArray
       extends Contravariant/*02000059*/
{
  .method /*06000047*/ public abstract virtual 
          instance void  M(object arg) cil managed
  {
    .override  method instance void class Contravariant/*02000059*//*1B000017*/::M(object[0...]) /* 0A00000F */
  } // end of method ContravariantArray::M

} // end of class ContravariantArray

.class /*0200005D*/ public abstract auto ansi ContravariantStringArray
       extends Contravariant/*02000059*/
{
  .method /*06000048*/ public abstract virtual 
          instance void  M(object[0...] arg) cil managed
  {
    .override  method instance void class Contravariant/*02000059*//*1B000017*/::M(string[0...]) /* 0A000010 */
  } // end of method ContravariantStringArray::M

} // end of class ContravariantStringArray

.class /*0200005E*/ public abstract auto ansi ContravariantSzArray
       extends Contravariant/*02000059*/
{
  .method /*06000049*/ public abstract virtual 
          instance void  M(object arg) cil managed
  {
    .override  method instance void class Contravariant/*02000059*//*1B000017*/::M(object[]) /* 0A000011 */
  } // end of method ContravariantSzArray::M

} // end of class ContravariantSzArray

.class /*0200005F*/ public abstract auto ansi ContravariantSzArraySzArray
       extends Contravariant/*02000059*/
{
  .method /*0600004A*/ public abstract virtual 
          instance void  M(object arg) cil managed
  {
    .override  method instance void class Contravariant/*02000059*//*1B000017*/::M(object[][]) /* 0A000012 */
  } // end of method ContravariantSzArraySzArray::M

} // end of class ContravariantSzArraySzArray

.class /*02000060*/ public abstract auto ansi ContravariantDerivedC
       extends [mscorlib/*23000001*/]System.Object/*01000001*/
{
  .method /*0600004B*/ public abstract virtual 
          instance void  M(class C/*02000004*/ arg) cil managed
  {
  } // end of method ContravariantDerivedC::M

} // end of class ContravariantDerivedC

.class /*02000061*/ public abstract auto ansi ContravariantDerivedCB
       extends ContravariantDerivedC/*02000060*/
{
  .method /*0600004C*/ public abstract virtual 
          instance void  M(class B/*02000003*/ arg) cil managed
  {
    .override  method instance void class ContravariantDerivedC/*02000060*//*1B000018*/::M(class C/*02000004*/) /* 0A000013 */
  } // end of method ContravariantDerivedCB::M

} // end of class ContravariantDerivedCB

.class /*02000062*/ public abstract auto ansi ContravariantDerivedCA
       extends ContravariantDerivedC/*02000060*/
{
  .method /*0600004D*/ public abstract virtual 
          instance void  M(class A/*02000002*/ arg) cil managed
  {
    .override  method instance void class ContravariantDerivedC/*02000060*//*1B000018*/::M(class C/*02000004*/) /* 0A000013 */
  } // end of method ContravariantDerivedCA::M

} // end of class ContravariantDerivedCA

.class /*02000063*/ public abstract auto ansi ContravariantIA
       extends [mscorlib/*23000001*/]System.Object/*01000001*/
{
  .method /*0600004E*/ public abstract virtual 
          instance void  M(class IA/*02000015*/ A_0) cil managed
  {
  } // end of method ContravariantIA::M

  .method /*0600004F*/ public abstract virtual 
          instance void  M(class IC/*02000017*/ A_0) cil managed
  {
  } // end of method ContravariantIA::M

} // end of class ContravariantIA

.class /*02000064*/ public abstract auto ansi ContravariantICB
       extends ContravariantIA/*02000063*/
{
  .method /*06000050*/ public abstract virtual 
          instance void  M(class IB/*02000016*/ A_0) cil managed
  {
    .override  method instance void class ContravariantIA/*02000063*//*1B000019*/::M(class IC/*02000017*/) /* 0A000014 */
  } // end of method ContravariantICB::M

} // end of class ContravariantICB

.class /*02000065*/ public abstract auto ansi ContravariantICA
       extends ContravariantIA/*02000063*/
{
  .method /*06000051*/ public abstract virtual 
          instance void  M(class IA/*02000015*/ A_0) cil managed
  {
    .override  method instance void class ContravariantIA/*02000063*//*1B000019*/::M(class IC/*02000017*/) /* 0A000014 */
  } // end of method ContravariantICA::M

} // end of class ContravariantICA

.class /*02000066*/ public abstract auto ansi ContravariantStructIA
       extends ContravariantIA/*02000063*/
{
  .method /*06000052*/ public abstract virtual 
          instance void  M(class StructIA/*0200001E*/ A_0) cil managed
  {
    .override  method instance void class ContravariantIA/*02000063*//*1B000019*/::M(class IA/*02000015*/) /* 0A000015 */
  } // end of method ContravariantStructIA::M

} // end of class ContravariantStructIA

.class /*02000067*/ private abstract auto ansi sealed beforefieldinit Program
       extends [mscorlib/*23000001*/]System.Object/*01000001*/
{
  .method /*06000053*/ private static int32 
          Run() cil managed
  {
    .entrypoint
    // Code size       53 (0x35)
    .maxstack  8
    IL_0000:  ldstr      "CovariantICoBofB" /* 70000001 */
    IL_0005:  call       void Program/*02000067*/::Load(string) /* 0600005C */
    IL_000a:  br         IL_0032

    IL_000f:  call       void Program/*02000067*/::Covariant() /* 06000056 */
    IL_0014:  call       void Program/*02000067*/::Contravariant() /* 06000057 */
    IL_0019:  call       void Program/*02000067*/::Overload() /* 06000054 */
    IL_001e:  call       void Program/*02000067*/::GenericParameterConstraint() /* 06000058 */
    IL_0023:  call       void Program/*02000067*/::CovariantGeneric() /* 06000055 */
    IL_0028:  br         IL_0032

    IL_002d:  call       void Program/*02000067*/::BadTypeLoadException() /* 06000059 */
    IL_0032:  ldc.i4.s   100
    IL_0034:  ret
  } // end of method Program::Run

  .method /*06000054*/ private static void 
          Overload() cil managed
  {
    // Code size       31 (0x1f)
    .maxstack  8
    IL_0000:  ldstr      "Overload3For3" /* 70000023 */
    IL_0005:  call       void Program/*02000067*/::Load(string) /* 0600005C */
    IL_000a:  ldstr      "OverloadImplicitBad" /* 7000003F */
    IL_000f:  call       void Program/*02000067*/::LoadThrowsMissingMethodException(string) /* 0600005B */
    IL_0014:  ldstr      "OverloadExplictBad" /* 70000067 */
    IL_0019:  call       void Program/*02000067*/::LoadThrowsMissingMethodException(string) /* 0600005B */
    IL_001e:  ret
  } // end of method Program::Overload

  .method /*06000055*/ private static void 
          CovariantGeneric() cil managed
  {
    // Code size       101 (0x65)
    .maxstack  8
    IL_0000:  ldstr      "CovariantAB`1" /* 7000008D */
    IL_0005:  call       void Program/*02000067*/::Load(string) /* 0600005C */
    IL_000a:  ldstr      "CovariantAC`1" /* 700000A9 */
    IL_000f:  call       void Program/*02000067*/::Load(string) /* 0600005C */
    IL_0014:  ldstr      "CovariantABC`1" /* 700000C5 */
    IL_0019:  call       void Program/*02000067*/::Load(string) /* 0600005C */
    IL_001e:  ldstr      "CovariantIAB`1" /* 700000E3 */
    IL_0023:  call       void Program/*02000067*/::Load(string) /* 0600005C */
    IL_0028:  ldstr      "CovariantIAC`1" /* 70000101 */
    IL_002d:  call       void Program/*02000067*/::Load(string) /* 0600005C */
    IL_0032:  ldstr      "CovariantIABC`1" /* 7000011F */
    IL_0037:  call       void Program/*02000067*/::Load(string) /* 0600005C */
    IL_003c:  ldstr      "CovariantMixedB" /* 7000013F */
    IL_0041:  call       void Program/*02000067*/::Load(string) /* 0600005C */
    IL_0046:  ldstr      "CovariantMixedC" /* 7000015F */
    IL_004b:  call       void Program/*02000067*/::Load(string) /* 0600005C */
    IL_0050:  ldstr      "CovariantACB`1" /* 7000017F */
    IL_0055:  call       void Program/*02000067*/::LoadThrowsTypeLoadException(string) /* 0600005A */
    IL_005a:  ldstr      "CovariantIACB`1" /* 7000019D */
    IL_005f:  call       void Program/*02000067*/::LoadThrowsTypeLoadException(string) /* 0600005A */
    IL_0064:  ret
  } // end of method Program::CovariantGeneric

  .method /*06000056*/ private static void 
          Covariant() cil managed
  {
    // Code size       151 (0x97)
    .maxstack  8
    IL_0000:  ldstr      "CovariantString" /* 700001BD */
    IL_0005:  call       void Program/*02000067*/::Load(string) /* 0600005C */
    IL_000a:  ldstr      "CovariantClass" /* 700001DD */
    IL_000f:  call       void Program/*02000067*/::Load(string) /* 0600005C */
    IL_0014:  ldstr      "CovariantArray" /* 700001FB */
    IL_0019:  call       void Program/*02000067*/::Load(string) /* 0600005C */
    IL_001e:  ldstr      "CovariantStringArray" /* 70000219 */
    IL_0023:  call       void Program/*02000067*/::Load(string) /* 0600005C */
    IL_0028:  ldstr      "CovariantSZArray" /* 70000243 */
    IL_002d:  call       void Program/*02000067*/::Load(string) /* 0600005C */
    IL_0032:  ldstr      "CovariantSZArraySZArray" /* 70000265 */
    IL_0037:  call       void Program/*02000067*/::Load(string) /* 0600005C */
    IL_003c:  ldstr      "CovariantDerivedAB" /* 70000295 */
    IL_0041:  call       void Program/*02000067*/::Load(string) /* 0600005C */
    IL_0046:  ldstr      "CovariantDerivedAC" /* 700002BB */
    IL_004b:  call       void Program/*02000067*/::Load(string) /* 0600005C */
    IL_0050:  ldstr      "CovariantDerivedACB" /* 700002E1 */
    IL_0055:  call       void Program/*02000067*/::LoadThrowsTypeLoadException(string) /* 0600005A */
    IL_005a:  ldstr      "CovariantDerivedNC" /* 70000309 */
    IL_005f:  call       void Program/*02000067*/::Load(string) /* 0600005C */
    IL_0064:  ldstr      "CovariantIAB" /* 7000032F */
    IL_0069:  call       void Program/*02000067*/::Load(string) /* 0600005C */
    IL_006e:  ldstr      "CovariantIAC" /* 70000349 */
    IL_0073:  call       void Program/*02000067*/::Load(string) /* 0600005C */
    IL_0078:  ldstr      "CovariantIABC" /* 70000363 */
    IL_007d:  call       void Program/*02000067*/::Load(string) /* 0600005C */
    IL_0082:  ldstr      "CovariantIACB" /* 7000037F */
    IL_0087:  call       void Program/*02000067*/::LoadThrowsTypeLoadException(string) /* 0600005A */
    IL_008c:  ldstr      "CovariantStructIA" /* 7000039B */
    IL_0091:  call       void Program/*02000067*/::LoadThrowsTypeLoadException(string) /* 0600005A */
    IL_0096:  ret
  } // end of method Program::Covariant

  .method /*06000057*/ private static void 
          Contravariant() cil managed
  {
    // Code size       111 (0x6f)
    .maxstack  8
    IL_0000:  ldstr      "ContravariantString" /* 700003BF */
    IL_0005:  call       void Program/*02000067*/::Load(string) /* 0600005C */
    IL_000a:  ldstr      "ContravariantClass" /* 700003E7 */
    IL_000f:  call       void Program/*02000067*/::Load(string) /* 0600005C */
    IL_0014:  ldstr      "ContravariantArray" /* 7000040D */
    IL_0019:  call       void Program/*02000067*/::Load(string) /* 0600005C */
    IL_001e:  ldstr      "ContravariantStringArray" /* 70000433 */
    IL_0023:  call       void Program/*02000067*/::Load(string) /* 0600005C */
    IL_0028:  ldstr      "ContravariantSZArray" /* 70000465 */
    IL_002d:  call       void Program/*02000067*/::Load(string) /* 0600005C */
    IL_0032:  ldstr      "ContravariantSZArraySZArray" /* 7000048F */
    IL_0037:  call       void Program/*02000067*/::Load(string) /* 0600005C */
    IL_003c:  ldstr      "ContravariantDerivedCB" /* 700004C7 */
    IL_0041:  call       void Program/*02000067*/::Load(string) /* 0600005C */
    IL_0046:  ldstr      "ContravariantDerivedCA" /* 700004F5 */
    IL_004b:  call       void Program/*02000067*/::Load(string) /* 0600005C */
    IL_0050:  ldstr      "ContravariantICB" /* 70000523 */
    IL_0055:  call       void Program/*02000067*/::Load(string) /* 0600005C */
    IL_005a:  ldstr      "ContravariantICA" /* 70000545 */
    IL_005f:  call       void Program/*02000067*/::Load(string) /* 0600005C */
    IL_0064:  ldstr      "ContravariantStructIA" /* 70000567 */
    IL_0069:  call       void Program/*02000067*/::LoadThrowsTypeLoadException(string) /* 0600005A */
    IL_006e:  ret
  } // end of method Program::Contravariant

  .method /*06000058*/ private static void 
          GenericParameterConstraint() cil managed
  {
    // Code size       131 (0x83)
    .maxstack  8
    IL_0000:  ldstr      "MethodConstraintWeaker" /* 70000593 */
    IL_0005:  call       void Program/*02000067*/::Load(string) /* 0600005C */
    IL_000a:  ldstr      "MethodConstraintWeakest" /* 700005C1 */
    IL_000f:  call       void Program/*02000067*/::Load(string) /* 0600005C */
    IL_0014:  ldstr      "MethodConstraintStrongAgain" /* 700005F1 */
    IL_0019:  call       void Program/*02000067*/::LoadThrowsTypeLoadException(string) /* 0600005A */
    IL_001e:  ldstr      "MethodConstraintImplicitWeaker" /* 70000629 */
    IL_0023:  call       void Program/*02000067*/::Load(string) /* 0600005C */
    IL_0028:  ldstr      "MethodConstraintImplicitWeakest" /* 70000667 */
    IL_002d:  call       void Program/*02000067*/::Load(string) /* 0600005C */
    IL_0032:  ldstr      "MethodConstraintImplicitStrongAgain" /* 700006A7 */
    IL_0037:  call       void Program/*02000067*/::LoadThrowsTypeLoadException(string) /* 0600005A */
    IL_003c:  ldstr      "MethodConstraintImplicitStrongerAgain" /* 700006EF */
    IL_0041:  call       void Program/*02000067*/::LoadThrowsTypeLoadException(string) /* 0600005A */
    IL_0046:  ldstr      "MethodIConstraintWeaker" /* 7000073B */
    IL_004b:  call       void Program/*02000067*/::Load(string) /* 0600005C */
    IL_0050:  ldstr      "MethodIConstraintWeakest" /* 7000076B */
    IL_0055:  call       void Program/*02000067*/::Load(string) /* 0600005C */
    IL_005a:  ldstr      "MethodIConstraintImplicitWeaker" /* 7000079D */
    IL_005f:  call       void Program/*02000067*/::Load(string) /* 0600005C */
    IL_0064:  ldstr      "MethodIConstraintImplicitWeakest" /* 700007DD */
    IL_0069:  call       void Program/*02000067*/::Load(string) /* 0600005C */
    IL_006e:  ldstr      "MethodIConstraintImplicitStrongAgain" /* 7000081F */
    IL_0073:  call       void Program/*02000067*/::LoadThrowsTypeLoadException(string) /* 0600005A */
    IL_0078:  ldstr      "MethodIConstraintImplicitStrongerAgain" /* 70000869 */
    IL_007d:  call       void Program/*02000067*/::LoadThrowsTypeLoadException(string) /* 0600005A */
    IL_0082:  ret
  } // end of method Program::GenericParameterConstraint

  .method /*06000059*/ private static void 
          BadTypeLoadException() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method Program::BadTypeLoadException

  .method /*0600005A*/ private static void 
          LoadThrowsTypeLoadException(string name) cil managed
  {
    // Code size       19 (0x13)
    .maxstack  8
    .try
    {
      IL_0000:  ldarg.0
      IL_0001:  call       void Program/*02000067*/::Load(string) /* 0600005C */
      IL_0006:  leave.s    IL_000b

    }  // end .try
    catch [mscorlib/*23000001*/]System.TypeLoadException/*01000003*/ 
    {
      IL_0008:  pop
      IL_0009:  leave.s    IL_0012

    }  // end handler
    IL_000b:  ldarg.0
    IL_000c:  newobj     instance void [mscorlib/*23000001*/]System.Exception/*01000004*/::.ctor(string) /* 0A000016 */
    IL_0011:  throw

    IL_0012:  ret
  } // end of method Program::LoadThrowsTypeLoadException

  .method /*0600005B*/ private static void 
          LoadThrowsMissingMethodException(string name) cil managed
  {
    // Code size       19 (0x13)
    .maxstack  8
    .try
    {
      IL_0000:  ldarg.0
      IL_0001:  call       void Program/*02000067*/::Load(string) /* 0600005C */
      IL_0006:  leave.s    IL_000b

    }  // end .try
    catch [mscorlib/*23000001*/]System.MissingMethodException/*01000005*/ 
    {
      IL_0008:  pop
      IL_0009:  leave.s    IL_0012

    }  // end handler
    IL_000b:  ldarg.0
    IL_000c:  newobj     instance void [mscorlib/*23000001*/]System.Exception/*01000004*/::.ctor(string) /* 0A000016 */
    IL_0011:  throw

    IL_0012:  ret
  } // end of method Program::LoadThrowsMissingMethodException

  .method /*0600005C*/ private static void 
          Load(string name) cil managed
  {
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       class [mscorlib/*23000001*/]System.Type/*01000006*/ [mscorlib/*23000001*/]System.Type/*01000006*/::GetType(string) /* 0A000017 */
    IL_0006:  pop
    IL_0007:  ret
  } // end of method Program::Load

} // end of class Program


// =============================================================

// *********** DISASSEMBLY COMPLETE ***********************
